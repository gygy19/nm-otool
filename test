../malloc/libftmalloc.a:
(__TEXT,__text) section
_malloc:
0000000000000c30	pushq	%rbp
0000000000000c31	movq	%rsp, %rbp
0000000000000c34	subq	$0x30, %rsp
0000000000000c38	movq	%rdi, -0x10(%rbp)
0000000000000c3c	cmpq	$0x1, -0x10(%rbp)
0000000000000c41	jae	0xc54
0000000000000c47	movq	$0x0, -0x8(%rbp)
0000000000000c4f	jmp	0xcb5
0000000000000c54	callq	0x11f0
0000000000000c59	leaq	0x23f0(%rip), %rdi
0000000000000c60	movq	%rax, -0x20(%rbp)
0000000000000c64	callq	0x2dee
0000000000000c69	movq	-0x10(%rbp), %rdi
0000000000000c6d	movl	%eax, -0x24(%rbp)
0000000000000c70	callq	0x10b0
0000000000000c75	movq	%rax, -0x18(%rbp)
0000000000000c79	cmpq	$0x0, %rax
0000000000000c7d	jne	0xc90
0000000000000c83	movq	$0x0, -0x8(%rbp)
0000000000000c8b	jmp	0xcb5
0000000000000c90	leaq	0x23b9(%rip), %rdi
0000000000000c97	movq	-0x18(%rbp), %rax
0000000000000c9b	movw	$0x0, 0x18(%rax)
0000000000000ca1	callq	0x2df4
0000000000000ca6	movq	-0x18(%rbp), %rdi
0000000000000caa	movq	0x10(%rdi), %rdi
0000000000000cae	movq	%rdi, -0x8(%rbp)
0000000000000cb2	movl	%eax, -0x28(%rbp)
0000000000000cb5	movq	-0x8(%rbp), %rax
0000000000000cb9	addq	$0x30, %rsp
0000000000000cbd	popq	%rbp
0000000000000cbe	retq
0000000000000cbf	nop
_free:
0000000000000cc0	pushq	%rbp
0000000000000cc1	movq	%rsp, %rbp
0000000000000cc4	subq	$0x20, %rsp
0000000000000cc8	movq	%rdi, -0x8(%rbp)
0000000000000ccc	cmpq	$0x0, -0x8(%rbp)
0000000000000cd1	jne	0xcdc
0000000000000cd7	jmp	0xd11
0000000000000cdc	callq	0x11f0
0000000000000ce1	leaq	0x2368(%rip), %rdi
0000000000000ce8	movq	%rax, -0x10(%rbp)
0000000000000cec	callq	0x2dee
0000000000000cf1	movl	$0x1, %esi
0000000000000cf6	movq	-0x8(%rbp), %rdi
0000000000000cfa	movl	%eax, -0x14(%rbp)
0000000000000cfd	callq	0x18f0
0000000000000d02	leaq	0x2347(%rip), %rdi
0000000000000d09	callq	0x2df4
0000000000000d0e	movl	%eax, -0x18(%rbp)
0000000000000d11	addq	$0x20, %rsp
0000000000000d15	popq	%rbp
0000000000000d16	retq
0000000000000d17	nopw	(%rax,%rax)
_realloc:
0000000000000d20	pushq	%rbp
0000000000000d21	movq	%rsp, %rbp
0000000000000d24	subq	$0x30, %rsp
0000000000000d28	movq	%rdi, -0x10(%rbp)
0000000000000d2c	movq	%rsi, -0x18(%rbp)
0000000000000d30	cmpq	$0x0, -0x10(%rbp)
0000000000000d35	jne	0xd4d
0000000000000d3b	movq	-0x18(%rbp), %rdi
0000000000000d3f	callq	0xc30
0000000000000d44	movq	%rax, -0x8(%rbp)
0000000000000d48	jmp	0xd8d
0000000000000d4d	callq	0x11f0
0000000000000d52	leaq	0x22f7(%rip), %rdi
0000000000000d59	movq	%rax, -0x28(%rbp)
0000000000000d5d	callq	0x2dee
0000000000000d62	movq	-0x10(%rbp), %rdi
0000000000000d66	movq	-0x18(%rbp), %rsi
0000000000000d6a	movl	%eax, -0x2c(%rbp)
0000000000000d6d	callq	0x1ef0
0000000000000d72	leaq	0x22d7(%rip), %rdi
0000000000000d79	movq	%rax, -0x20(%rbp)
0000000000000d7d	callq	0x2df4
0000000000000d82	movq	-0x20(%rbp), %rsi
0000000000000d86	movq	%rsi, -0x8(%rbp)
0000000000000d8a	movl	%eax, -0x30(%rbp)
0000000000000d8d	movq	-0x8(%rbp), %rax
0000000000000d91	addq	$0x30, %rsp
0000000000000d95	popq	%rbp
0000000000000d96	retq
0000000000000d97	nopw	(%rax,%rax)
_show_alloc_mem:
0000000000000da0	pushq	%rbp
0000000000000da1	movq	%rsp, %rbp
0000000000000da4	subq	$0x10, %rsp
0000000000000da8	movq	$0x0, -0x8(%rbp)
0000000000000db0	callq	0x2540
0000000000000db5	addq	-0x8(%rbp), %rax
0000000000000db9	movq	%rax, -0x8(%rbp)
0000000000000dbd	callq	0x25d0
0000000000000dc2	addq	-0x8(%rbp), %rax
0000000000000dc6	movq	%rax, -0x8(%rbp)
0000000000000dca	callq	0x2660
0000000000000dcf	leaq	0x2080(%rip), %rdi
0000000000000dd6	addq	-0x8(%rbp), %rax
0000000000000dda	movq	%rax, -0x8(%rbp)
0000000000000dde	callq	0x29b0
0000000000000de3	movq	-0x8(%rbp), %rdi
0000000000000de7	callq	0x28d0
0000000000000dec	leaq	0x206c(%rip), %rdi
0000000000000df3	callq	0x29b0
0000000000000df8	addq	$0x10, %rsp
0000000000000dfc	popq	%rbp
0000000000000dfd	retq
0000000000000dfe	nop
_show_hexa_mem:
0000000000000e00	pushq	%rbp
0000000000000e01	movq	%rsp, %rbp
0000000000000e04	xorl	%edi, %edi
0000000000000e06	callq	0x22e0
0000000000000e0b	cmpl	$0x0, %eax
0000000000000e0e	jle	0xe33
0000000000000e14	leaq	0x204d(%rip), %rdi
0000000000000e1b	callq	0x29b0
0000000000000e20	leaq	0x2068(%rip), %rdi
0000000000000e27	callq	0x29b0
0000000000000e2c	xorl	%edi, %edi
0000000000000e2e	callq	0x2bb0
0000000000000e33	movl	$0x1, %edi
0000000000000e38	callq	0x22e0
0000000000000e3d	cmpl	$0x0, %eax
0000000000000e40	jle	0xe68
0000000000000e46	leaq	0x2061(%rip), %rdi
0000000000000e4d	callq	0x29b0
0000000000000e52	leaq	0x207d(%rip), %rdi
0000000000000e59	callq	0x29b0
0000000000000e5e	movl	$0x1, %edi
0000000000000e63	callq	0x2bb0
0000000000000e68	movl	$0x2, %edi
0000000000000e6d	callq	0x22e0
0000000000000e72	cmpl	$0x0, %eax
0000000000000e75	jle	0xe9d
0000000000000e7b	leaq	0x2072(%rip), %rdi
0000000000000e82	callq	0x29b0
0000000000000e87	leaq	0x2048(%rip), %rdi
0000000000000e8e	callq	0x29b0
0000000000000e93	movl	$0x2, %edi
0000000000000e98	callq	0x2bb0
0000000000000e9d	popq	%rbp
0000000000000e9e	retq
0000000000000e9f	nop
_ft_mmap:
0000000000000ea0	pushq	%rbp
0000000000000ea1	movq	%rsp, %rbp
0000000000000ea4	subq	$0x20, %rsp
0000000000000ea8	movl	$0xffffffff, %r8d
0000000000000eae	xorl	%eax, %eax
0000000000000eb0	movl	%eax, %r9d
0000000000000eb3	movq	%rdi, -0x8(%rbp)
0000000000000eb7	movq	%rsi, -0x10(%rbp)
0000000000000ebb	movl	%edx, -0x14(%rbp)
0000000000000ebe	movl	%ecx, -0x18(%rbp)
0000000000000ec1	movq	-0x8(%rbp), %rdi
0000000000000ec5	movq	-0x10(%rbp), %rsi
0000000000000ec9	movl	-0x14(%rbp), %edx
0000000000000ecc	movl	-0x18(%rbp), %eax
0000000000000ecf	orl	$0x1000, %eax
0000000000000ed4	orl	$0x2, %eax
0000000000000ed7	movl	%eax, %ecx
0000000000000ed9	callq	0x2ddc
0000000000000ede	addq	$0x20, %rsp
0000000000000ee2	popq	%rbp
0000000000000ee3	retq
0000000000000ee4	nop
0000000000000ee5	nop
0000000000000ee6	nop
0000000000000ee7	nop
0000000000000ee8	nop
0000000000000ee9	nop
0000000000000eea	nop
0000000000000eeb	nop
0000000000000eec	nop
0000000000000eed	nop
0000000000000eee	nop
0000000000000eef	nop
_get_shield_new_map:
0000000000000ef0	pushq	%rbp
0000000000000ef1	movq	%rsp, %rbp
0000000000000ef4	subq	$0x30, %rsp
0000000000000ef8	movl	%edi, -0xc(%rbp)
0000000000000efb	movq	%rsi, -0x18(%rbp)
0000000000000eff	movq	$0x0, -0x20(%rbp)
0000000000000f07	movl	-0xc(%rbp), %edi
0000000000000f0a	movq	-0x18(%rbp), %rsi
0000000000000f0e	movl	%esi, %eax
0000000000000f10	movl	%eax, %esi
0000000000000f12	callq	0x1450
0000000000000f17	movq	%rax, -0x20(%rbp)
0000000000000f1b	cmpq	$0x0, %rax
0000000000000f1f	jne	0xf32
0000000000000f25	movq	$0x0, -0x8(%rbp)
0000000000000f2d	jmp	0xfb4
0000000000000f32	xorl	%esi, %esi
0000000000000f34	movq	-0x20(%rbp), %rdi
0000000000000f38	callq	0x19d0
0000000000000f3d	movq	-0x20(%rbp), %rdi
0000000000000f41	movq	(%rdi), %rdi
0000000000000f44	movq	%rax, 0x10(%rdi)
0000000000000f48	movq	-0x18(%rbp), %rax
0000000000000f4c	movq	-0x20(%rbp), %rdi
0000000000000f50	movq	(%rdi), %rdi
0000000000000f53	movq	%rax, 0x8(%rdi)
0000000000000f57	cmpl	$0x2, -0xc(%rbp)
0000000000000f5b	jne	0xf6e
0000000000000f61	xorl	%eax, %eax
0000000000000f63	movl	%eax, %ecx
0000000000000f65	movq	%rcx, -0x28(%rbp)
0000000000000f69	jmp	0xf82
0000000000000f6e	movq	-0x20(%rbp), %rax
0000000000000f72	movl	0x18(%rax), %edi
0000000000000f75	callq	0x1e70
0000000000000f7a	imulq	$0x64, %rax, %rax
0000000000000f7e	movq	%rax, -0x28(%rbp)
0000000000000f82	movq	-0x28(%rbp), %rax
0000000000000f86	movq	-0x20(%rbp), %rcx
0000000000000f8a	movq	%rax, 0x28(%rcx)
0000000000000f8e	movq	-0x20(%rbp), %rax
0000000000000f92	movl	0x18(%rax), %edi
0000000000000f95	callq	0x1e70
0000000000000f9a	movq	-0x20(%rbp), %rcx
0000000000000f9e	movq	0x28(%rcx), %rdx
0000000000000fa2	subq	%rax, %rdx
0000000000000fa5	movq	%rdx, 0x28(%rcx)
0000000000000fa9	movq	-0x20(%rbp), %rax
0000000000000fad	movq	(%rax), %rax
0000000000000fb0	movq	%rax, -0x8(%rbp)
0000000000000fb4	movq	-0x8(%rbp), %rax
0000000000000fb8	addq	$0x30, %rsp
0000000000000fbc	popq	%rbp
0000000000000fbd	retq
0000000000000fbe	nop
_check_free_place:
0000000000000fc0	pushq	%rbp
0000000000000fc1	movq	%rsp, %rbp
0000000000000fc4	subq	$0x30, %rsp
0000000000000fc8	movl	%edi, -0xc(%rbp)
0000000000000fcb	movq	%rsi, -0x18(%rbp)
0000000000000fcf	callq	0x11f0
0000000000000fd4	movq	%rax, -0x20(%rbp)
0000000000000fd8	cmpq	$0x0, -0x20(%rbp)
0000000000000fdd	je	0x1094
0000000000000fe3	movq	-0x20(%rbp), %rax
0000000000000fe7	cmpl	$0x0, 0x1c(%rax)
0000000000000feb	jne	0x1083
0000000000000ff1	movq	-0x20(%rbp), %rax
0000000000000ff5	movl	0x18(%rax), %ecx
0000000000000ff8	cmpl	-0xc(%rbp), %ecx
0000000000000ffb	jne	0x1083
0000000000001001	movq	-0x20(%rbp), %rax
0000000000001005	movq	0x28(%rax), %rax
0000000000001009	cmpq	-0x18(%rbp), %rax
000000000000100d	jb	0x1083
0000000000001013	movq	-0x20(%rbp), %rdi
0000000000001017	movq	-0x18(%rbp), %rsi
000000000000101b	callq	0x1de0
0000000000001020	movq	%rax, -0x28(%rbp)
0000000000001024	cmpq	$0x0, -0x28(%rbp)
0000000000001029	je	0x107e
000000000000102f	movq	-0x28(%rbp), %rax
0000000000001033	cmpq	$0x0, 0x10(%rax)
0000000000001038	jne	0x1056
000000000000103e	movq	-0x20(%rbp), %rdi
0000000000001042	movq	-0x28(%rbp), %rax
0000000000001046	movswl	(%rax), %esi
0000000000001049	callq	0x19d0
000000000000104e	movq	-0x28(%rbp), %rdi
0000000000001052	movq	%rax, 0x10(%rdi)
0000000000001056	movq	-0x20(%rbp), %rax
000000000000105a	movl	0x18(%rax), %edi
000000000000105d	callq	0x1e70
0000000000001062	movq	-0x20(%rbp), %rcx
0000000000001066	movq	0x28(%rcx), %rdx
000000000000106a	subq	%rax, %rdx
000000000000106d	movq	%rdx, 0x28(%rcx)
0000000000001071	movq	-0x28(%rbp), %rax
0000000000001075	movq	%rax, -0x8(%rbp)
0000000000001079	jmp	0x10a4
000000000000107e	jmp	0x1083
0000000000001083	movq	-0x20(%rbp), %rax
0000000000001087	movq	0x8(%rax), %rax
000000000000108b	movq	%rax, -0x20(%rbp)
000000000000108f	jmp	0xfd8
0000000000001094	movl	-0xc(%rbp), %edi
0000000000001097	movq	-0x18(%rbp), %rsi
000000000000109b	callq	0xef0
00000000000010a0	movq	%rax, -0x8(%rbp)
00000000000010a4	movq	-0x8(%rbp), %rax
00000000000010a8	addq	$0x30, %rsp
00000000000010ac	popq	%rbp
00000000000010ad	retq
00000000000010ae	nop
_get_shield:
00000000000010b0	pushq	%rbp
00000000000010b1	movq	%rsp, %rbp
00000000000010b4	subq	$0x20, %rsp
00000000000010b8	movq	%rdi, -0x10(%rbp)
00000000000010bc	movq	$0x0, -0x18(%rbp)
00000000000010c4	movq	-0x10(%rbp), %rdi
00000000000010c8	callq	0x1150
00000000000010cd	movl	%eax, -0x1c(%rbp)
00000000000010d0	movl	-0x1c(%rbp), %edi
00000000000010d3	callq	0x14f0
00000000000010d8	cmpl	$0x0, %eax
00000000000010db	jne	0x10f6
00000000000010e1	movl	-0x1c(%rbp), %edi
00000000000010e4	movq	-0x10(%rbp), %rsi
00000000000010e8	callq	0xef0
00000000000010ed	movq	%rax, -0x18(%rbp)
00000000000010f1	jmp	0x1106
00000000000010f6	movl	-0x1c(%rbp), %edi
00000000000010f9	movq	-0x10(%rbp), %rsi
00000000000010fd	callq	0xfc0
0000000000001102	movq	%rax, -0x18(%rbp)
0000000000001106	cmpq	$0x0, -0x18(%rbp)
000000000000110b	je	0x111d
0000000000001111	movq	-0x10(%rbp), %rax
0000000000001115	movq	-0x18(%rbp), %rcx
0000000000001119	movq	%rax, 0x8(%rcx)
000000000000111d	cmpq	$0x0, -0x18(%rbp)
0000000000001122	jne	0x1135
0000000000001128	movq	$0x0, -0x8(%rbp)
0000000000001130	jmp	0x113d
0000000000001135	movq	-0x18(%rbp), %rax
0000000000001139	movq	%rax, -0x8(%rbp)
000000000000113d	movq	-0x8(%rbp), %rax
0000000000001141	addq	$0x20, %rsp
0000000000001145	popq	%rbp
0000000000001146	retq
0000000000001147	nopw	(%rax,%rax)
_get_zone_type_by_size:
0000000000001150	pushq	%rbp
0000000000001151	movq	%rsp, %rbp
0000000000001154	subq	$0x30, %rsp
0000000000001158	movq	%rdi, -0x10(%rbp)
000000000000115c	movq	-0x10(%rbp), %rdi
0000000000001160	movq	%rdi, -0x18(%rbp)
0000000000001164	callq	0x2dd6
0000000000001169	movl	$0x64, %ecx
000000000000116e	movl	$0x4, %edx
0000000000001173	movl	%edx, -0x1c(%rbp)
0000000000001176	cltd
0000000000001177	movl	-0x1c(%rbp), %esi
000000000000117a	idivl	%esi
000000000000117c	imull	$0x64, %eax, %eax
000000000000117f	cltd
0000000000001180	idivl	%ecx
0000000000001182	movslq	%eax, %rdi
0000000000001185	movq	-0x18(%rbp), %r8
0000000000001189	cmpq	%rdi, %r8
000000000000118c	ja	0x119e
0000000000001192	movl	$0x0, -0x4(%rbp)
0000000000001199	jmp	0x11dc
000000000000119e	movq	-0x10(%rbp), %rax
00000000000011a2	movq	%rax, -0x28(%rbp)
00000000000011a6	callq	0x2dd6
00000000000011ab	movl	$0x64, %ecx
00000000000011b0	imull	$0xa, %eax, %eax
00000000000011b3	imull	$0x64, %eax, %eax
00000000000011b6	cltd
00000000000011b7	idivl	%ecx
00000000000011b9	movslq	%eax, %rsi
00000000000011bc	movq	-0x28(%rbp), %rdi
00000000000011c0	cmpq	%rsi, %rdi
00000000000011c3	ja	0x11d5
00000000000011c9	movl	$0x1, -0x4(%rbp)
00000000000011d0	jmp	0x11dc
00000000000011d5	movl	$0x2, -0x4(%rbp)
00000000000011dc	movl	-0x4(%rbp), %eax
00000000000011df	addq	$0x30, %rsp
00000000000011e3	popq	%rbp
00000000000011e4	retq
00000000000011e5	nop
00000000000011e6	nop
00000000000011e7	nop
00000000000011e8	nop
00000000000011e9	nop
00000000000011ea	nop
00000000000011eb	nop
00000000000011ec	nop
00000000000011ed	nop
00000000000011ee	nop
00000000000011ef	nop
_getallmaps:
00000000000011f0	pushq	%rbp
00000000000011f1	movq	%rsp, %rbp
00000000000011f4	subq	$0x20, %rsp
00000000000011f8	cmpq	$0x0, 0x1e48(%rip)
0000000000001200	jne	0x12c3
0000000000001206	leaq	0x1e43(%rip), %rdi
000000000000120d	xorl	%eax, %eax
000000000000120f	movl	%eax, %esi
0000000000001211	callq	0x2de8
0000000000001216	xorl	%ecx, %ecx
0000000000001218	movl	%ecx, %edi
000000000000121a	movl	$0x30, %ecx
000000000000121f	movl	%ecx, %esi
0000000000001221	movl	$0x3, %edx
0000000000001226	xorl	%ecx, %ecx
0000000000001228	movl	%eax, -0x14(%rbp)
000000000000122b	callq	0xea0
0000000000001230	movq	$-0x1, %rsi
0000000000001237	movq	%rax, -0x10(%rbp)
000000000000123b	cmpq	%rsi, -0x10(%rbp)
000000000000123f	jne	0x1252
0000000000001245	movq	$0x0, -0x8(%rbp)
000000000000124d	jmp	0x12ce
0000000000001252	movq	-0x10(%rbp), %rax
0000000000001256	movq	%rax, 0x1deb(%rip)
000000000000125d	movq	0x1de4(%rip), %rax
0000000000001264	movq	$0x0, (%rax)
000000000000126b	movq	0x1dd6(%rip), %rax
0000000000001272	movq	$0x0, 0x8(%rax)
000000000000127a	movq	0x1dc7(%rip), %rax
0000000000001281	movq	$0x0, 0x10(%rax)
0000000000001289	movq	0x1db8(%rip), %rax
0000000000001290	movl	$0x0, 0x18(%rax)
0000000000001297	movq	0x1daa(%rip), %rax
000000000000129e	movl	$0x1, 0x1c(%rax)
00000000000012a5	movq	-0x10(%rbp), %rax
00000000000012a9	movq	0x1d98(%rip), %rcx
00000000000012b0	movq	%rax, 0x20(%rcx)
00000000000012b4	movq	0x1d8d(%rip), %rax
00000000000012bb	movq	$0x0, 0x28(%rax)
00000000000012c3	movq	0x1d7e(%rip), %rax
00000000000012ca	movq	%rax, -0x8(%rbp)
00000000000012ce	movq	-0x8(%rbp), %rax
00000000000012d2	addq	$0x20, %rsp
00000000000012d6	popq	%rbp
00000000000012d7	retq
00000000000012d8	nopl	(%rax,%rax)
_newmap:
00000000000012e0	pushq	%rbp
00000000000012e1	movq	%rsp, %rbp
00000000000012e4	subq	$0x40, %rsp
00000000000012e8	movq	%rdi, -0x10(%rbp)
00000000000012ec	movl	%esi, -0x14(%rbp)
00000000000012ef	movl	%edx, -0x18(%rbp)
00000000000012f2	cmpl	$0x2, -0x14(%rbp)
00000000000012f6	jb	0x130e
00000000000012fc	movslq	-0x18(%rbp), %rax
0000000000001300	addq	$0x20, %rax
0000000000001304	movl	%eax, %ecx
0000000000001306	movl	%ecx, -0x24(%rbp)
0000000000001309	jmp	0x1350
000000000000130e	cmpl	$0x0, -0x14(%rbp)
0000000000001312	jne	0x1330
0000000000001318	callq	0x2dd6
000000000000131d	movl	$0x4, %ecx
0000000000001322	cltd
0000000000001323	idivl	%ecx
0000000000001325	imull	$0x64, %eax, %eax
0000000000001328	movl	%eax, -0x34(%rbp)
000000000000132b	jmp	0x133e
0000000000001330	callq	0x2dd6
0000000000001335	imull	$0xa, %eax, %eax
0000000000001338	imull	$0x64, %eax, %eax
000000000000133b	movl	%eax, -0x34(%rbp)
000000000000133e	movl	-0x34(%rbp), %eax
0000000000001341	movslq	%eax, %rcx
0000000000001344	addq	$0xc80, %rcx
000000000000134b	movl	%ecx, %eax
000000000000134d	movl	%eax, -0x24(%rbp)
0000000000001350	xorl	%eax, %eax
0000000000001352	movl	%eax, %edi
0000000000001354	movl	$0x3, %edx
0000000000001359	xorl	%ecx, %ecx
000000000000135b	movslq	-0x24(%rbp), %rsi
000000000000135f	addq	$0x30, %rsi
0000000000001363	callq	0xea0
0000000000001368	movq	$-0x1, %rsi
000000000000136f	movq	%rax, -0x30(%rbp)
0000000000001373	cmpq	%rsi, -0x30(%rbp)
0000000000001377	jne	0x138a
000000000000137d	movq	$0x0, -0x8(%rbp)
0000000000001385	jmp	0x1442
000000000000138a	movq	-0x30(%rbp), %rax
000000000000138e	movq	%rax, -0x20(%rbp)
0000000000001392	movq	-0x20(%rbp), %rax
0000000000001396	movq	$0x0, 0x8(%rax)
000000000000139e	movq	-0x10(%rbp), %rax
00000000000013a2	movq	-0x20(%rbp), %rcx
00000000000013a6	movq	%rax, 0x10(%rcx)
00000000000013aa	cmpq	$0x0, -0x10(%rbp)
00000000000013af	je	0x13c1
00000000000013b5	movq	-0x20(%rbp), %rax
00000000000013b9	movq	-0x10(%rbp), %rcx
00000000000013bd	movq	%rax, 0x8(%rcx)
00000000000013c1	movl	-0x14(%rbp), %eax
00000000000013c4	movq	-0x20(%rbp), %rcx
00000000000013c8	movl	%eax, 0x18(%rcx)
00000000000013cb	movq	-0x20(%rbp), %rcx
00000000000013cf	movl	$0x0, 0x1c(%rcx)
00000000000013d6	movq	-0x30(%rbp), %rcx
00000000000013da	addq	$0x30, %rcx
00000000000013de	movl	-0x14(%rbp), %esi
00000000000013e1	movslq	-0x18(%rbp), %rdx
00000000000013e5	movq	%rcx, %rdi
00000000000013e8	callq	0x1b20
00000000000013ed	xorl	%esi, %esi
00000000000013ef	movq	-0x30(%rbp), %rcx
00000000000013f3	movq	-0x20(%rbp), %rdx
00000000000013f7	movq	%rcx, 0x20(%rdx)
00000000000013fb	movq	-0x20(%rbp), %rdi
00000000000013ff	callq	0x1a90
0000000000001404	movq	-0x20(%rbp), %rcx
0000000000001408	movq	%rax, (%rcx)
000000000000140b	movq	-0x20(%rbp), %rax
000000000000140f	movq	$0x0, 0x28(%rax)
0000000000001417	movq	-0x20(%rbp), %rax
000000000000141b	cmpq	$0x0, (%rax)
000000000000141f	jne	0x1432
0000000000001425	xorl	%eax, %eax
0000000000001427	movl	%eax, %ecx
0000000000001429	movq	%rcx, -0x40(%rbp)
000000000000142d	jmp	0x143a
0000000000001432	movq	-0x20(%rbp), %rax
0000000000001436	movq	%rax, -0x40(%rbp)
000000000000143a	movq	-0x40(%rbp), %rax
000000000000143e	movq	%rax, -0x8(%rbp)
0000000000001442	movq	-0x8(%rbp), %rax
0000000000001446	addq	$0x40, %rsp
000000000000144a	popq	%rbp
000000000000144b	retq
000000000000144c	nopl	(%rax)
_add_new_map:
0000000000001450	pushq	%rbp
0000000000001451	movq	%rsp, %rbp
0000000000001454	subq	$0x20, %rsp
0000000000001458	movl	%edi, -0xc(%rbp)
000000000000145b	movl	%esi, -0x10(%rbp)
000000000000145e	callq	0x11f0
0000000000001463	movq	%rax, -0x20(%rbp)
0000000000001467	cmpq	$0x0, %rax
000000000000146b	jne	0x147e
0000000000001471	movq	$0x0, -0x8(%rbp)
0000000000001479	jmp	0x14e4
000000000000147e	jmp	0x1483
0000000000001483	movq	-0x20(%rbp), %rax
0000000000001487	cmpq	$0x0, 0x8(%rax)
000000000000148c	je	0x14a3
0000000000001492	movq	-0x20(%rbp), %rax
0000000000001496	movq	0x8(%rax), %rax
000000000000149a	movq	%rax, -0x20(%rbp)
000000000000149e	jmp	0x1483
00000000000014a3	movq	-0x20(%rbp), %rdi
00000000000014a7	movl	-0xc(%rbp), %esi
00000000000014aa	movl	-0x10(%rbp), %edx
00000000000014ad	callq	0x12e0
00000000000014b2	movq	%rax, -0x18(%rbp)
00000000000014b6	cmpq	$0x0, %rax
00000000000014ba	jne	0x14cd
00000000000014c0	movq	$0x0, -0x8(%rbp)
00000000000014c8	jmp	0x14e4
00000000000014cd	movslq	-0x10(%rbp), %rax
00000000000014d1	movq	-0x18(%rbp), %rcx
00000000000014d5	movq	(%rcx), %rcx
00000000000014d8	movq	%rax, 0x8(%rcx)
00000000000014dc	movq	-0x18(%rbp), %rax
00000000000014e0	movq	%rax, -0x8(%rbp)
00000000000014e4	movq	-0x8(%rbp), %rax
00000000000014e8	addq	$0x20, %rsp
00000000000014ec	popq	%rbp
00000000000014ed	retq
00000000000014ee	nop
_haszone:
00000000000014f0	pushq	%rbp
00000000000014f1	movq	%rsp, %rbp
00000000000014f4	subq	$0x10, %rsp
00000000000014f8	movl	%edi, -0x8(%rbp)
00000000000014fb	callq	0x11f0
0000000000001500	movq	%rax, -0x10(%rbp)
0000000000001504	cmpq	$0x0, -0x10(%rbp)
0000000000001509	je	0x1558
000000000000150f	movq	-0x10(%rbp), %rax
0000000000001513	cmpl	$0x0, 0x1c(%rax)
0000000000001517	jne	0x1547
000000000000151d	movq	-0x10(%rbp), %rax
0000000000001521	cmpl	$0x0, 0x1c(%rax)
0000000000001525	jne	0x1547
000000000000152b	movq	-0x10(%rbp), %rax
000000000000152f	movl	0x18(%rax), %ecx
0000000000001532	cmpl	-0x8(%rbp), %ecx
0000000000001535	jne	0x1547
000000000000153b	movl	$0x1, -0x4(%rbp)
0000000000001542	jmp	0x155f
0000000000001547	movq	-0x10(%rbp), %rax
000000000000154b	movq	0x8(%rax), %rax
000000000000154f	movq	%rax, -0x10(%rbp)
0000000000001553	jmp	0x1504
0000000000001558	movl	$0x0, -0x4(%rbp)
000000000000155f	movl	-0x4(%rbp), %eax
0000000000001562	addq	$0x10, %rsp
0000000000001566	popq	%rbp
0000000000001567	retq
0000000000001568	nopl	(%rax,%rax)
_getmap_by_zone:
0000000000001570	pushq	%rbp
0000000000001571	movq	%rsp, %rbp
0000000000001574	subq	$0x20, %rsp
0000000000001578	movl	%edi, -0xc(%rbp)
000000000000157b	callq	0x11f0
0000000000001580	movq	%rax, -0x18(%rbp)
0000000000001584	cmpq	$0x0, -0x18(%rbp)
0000000000001589	je	0x15cb
000000000000158f	movq	-0x18(%rbp), %rax
0000000000001593	cmpl	$0x0, 0x1c(%rax)
0000000000001597	jne	0x15ba
000000000000159d	movq	-0x18(%rbp), %rax
00000000000015a1	movl	0x18(%rax), %ecx
00000000000015a4	cmpl	-0xc(%rbp), %ecx
00000000000015a7	jne	0x15ba
00000000000015ad	movq	-0x18(%rbp), %rax
00000000000015b1	movq	%rax, -0x8(%rbp)
00000000000015b5	jmp	0x15d3
00000000000015ba	movq	-0x18(%rbp), %rax
00000000000015be	movq	0x8(%rax), %rax
00000000000015c2	movq	%rax, -0x18(%rbp)
00000000000015c6	jmp	0x1584
00000000000015cb	movq	$0x0, -0x8(%rbp)
00000000000015d3	movq	-0x8(%rbp), %rax
00000000000015d7	addq	$0x20, %rsp
00000000000015db	popq	%rbp
00000000000015dc	retq
00000000000015dd	nop
00000000000015de	nop
00000000000015df	nop
_get_start_ptr_zone:
00000000000015e0	pushq	%rbp
00000000000015e1	movq	%rsp, %rbp
00000000000015e4	movq	%rdi, -0x8(%rbp)
00000000000015e8	movq	-0x8(%rbp), %rdi
00000000000015ec	movq	0x20(%rdi), %rdi
00000000000015f0	addq	$0x30, %rdi
00000000000015f4	movq	%rdi, -0x10(%rbp)
00000000000015f8	movq	-0x8(%rbp), %rdi
00000000000015fc	cmpl	$0x2, 0x18(%rdi)
0000000000001600	jne	0x1617
0000000000001606	movq	-0x10(%rbp), %rax
000000000000160a	addq	$0x20, %rax
000000000000160e	movq	%rax, -0x10(%rbp)
0000000000001612	jmp	0x1625
0000000000001617	movq	-0x10(%rbp), %rax
000000000000161b	addq	$0xc80, %rax
0000000000001621	movq	%rax, -0x10(%rbp)
0000000000001625	movq	-0x10(%rbp), %rax
0000000000001629	popq	%rbp
000000000000162a	retq
000000000000162b	nopl	(%rax,%rax)
_get_end_ptr_zone:
0000000000001630	pushq	%rbp
0000000000001631	movq	%rsp, %rbp
0000000000001634	subq	$0x30, %rsp
0000000000001638	movq	%rdi, -0x8(%rbp)
000000000000163c	movq	%rsi, -0x10(%rbp)
0000000000001640	movq	-0x10(%rbp), %rsi
0000000000001644	cmpl	$0x2, 0x18(%rsi)
0000000000001648	jne	0x1666
000000000000164e	movq	-0x8(%rbp), %rax
0000000000001652	movq	-0x10(%rbp), %rcx
0000000000001656	movq	(%rcx), %rcx
0000000000001659	addq	0x8(%rcx), %rax
000000000000165d	movq	%rax, -0x18(%rbp)
0000000000001661	jmp	0x16b3
0000000000001666	movq	-0x8(%rbp), %rax
000000000000166a	movq	-0x10(%rbp), %rcx
000000000000166e	cmpl	$0x0, 0x18(%rcx)
0000000000001672	movq	%rax, -0x20(%rbp)
0000000000001676	jne	0x1694
000000000000167c	callq	0x2dd6
0000000000001681	movl	$0x4, %ecx
0000000000001686	cltd
0000000000001687	idivl	%ecx
0000000000001689	imull	$0x64, %eax, %eax
000000000000168c	movl	%eax, -0x24(%rbp)
000000000000168f	jmp	0x16a2
0000000000001694	callq	0x2dd6
0000000000001699	imull	$0xa, %eax, %eax
000000000000169c	imull	$0x64, %eax, %eax
000000000000169f	movl	%eax, -0x24(%rbp)
00000000000016a2	movl	-0x24(%rbp), %eax
00000000000016a5	movslq	%eax, %rcx
00000000000016a8	movq	-0x20(%rbp), %rdx
00000000000016ac	addq	%rcx, %rdx
00000000000016af	movq	%rdx, -0x18(%rbp)
00000000000016b3	movq	-0x18(%rbp), %rax
00000000000016b7	addq	$0x30, %rsp
00000000000016bb	popq	%rbp
00000000000016bc	retq
00000000000016bd	nopl	(%rax)
_free_shield:
00000000000016c0	pushq	%rbp
00000000000016c1	movq	%rsp, %rbp
00000000000016c4	subq	$0x30, %rsp
00000000000016c8	movq	%rdi, -0x10(%rbp)
00000000000016cc	movq	%rsi, -0x18(%rbp)
00000000000016d0	movq	-0x18(%rbp), %rsi
00000000000016d4	movq	(%rsi), %rsi
00000000000016d7	movq	%rsi, -0x20(%rbp)
00000000000016db	movq	-0x18(%rbp), %rdi
00000000000016df	callq	0x15e0
00000000000016e4	movq	%rax, -0x28(%rbp)
00000000000016e8	movq	-0x10(%rbp), %rax
00000000000016ec	cmpq	-0x28(%rbp), %rax
00000000000016f0	jb	0x1718
00000000000016f6	movq	-0x10(%rbp), %rax
00000000000016fa	movq	-0x28(%rbp), %rdi
00000000000016fe	movq	-0x18(%rbp), %rsi
0000000000001702	movq	%rax, -0x30(%rbp)
0000000000001706	callq	0x1630
000000000000170b	movq	-0x30(%rbp), %rsi
000000000000170f	cmpq	%rax, %rsi
0000000000001712	jbe	0x1724
0000000000001718	movl	$0x0, -0x4(%rbp)
000000000000171f	jmp	0x17aa
0000000000001724	jmp	0x1729
0000000000001729	cmpq	$0x0, -0x20(%rbp)
000000000000172e	je	0x17a3
0000000000001734	movq	-0x20(%rbp), %rax
0000000000001738	movswl	0x18(%rax), %ecx
000000000000173c	cmpl	$0x0, %ecx
000000000000173f	jne	0x1785
0000000000001745	movq	-0x20(%rbp), %rax
0000000000001749	movq	0x10(%rax), %rax
000000000000174d	cmpq	-0x10(%rbp), %rax
0000000000001751	jne	0x1785
0000000000001757	movq	-0x20(%rbp), %rax
000000000000175b	movw	$0x1, 0x18(%rax)
0000000000001761	movq	-0x18(%rbp), %rax
0000000000001765	movl	0x18(%rax), %edi
0000000000001768	callq	0x1e70
000000000000176d	movq	-0x18(%rbp), %rcx
0000000000001771	addq	0x28(%rcx), %rax
0000000000001775	movq	%rax, 0x28(%rcx)
0000000000001779	movl	$0x1, -0x4(%rbp)
0000000000001780	jmp	0x17aa
0000000000001785	movq	-0x18(%rbp), %rdi
0000000000001789	movq	-0x20(%rbp), %rax
000000000000178d	movswl	(%rax), %ecx
0000000000001790	addl	$0x1, %ecx
0000000000001793	movl	%ecx, %esi
0000000000001795	callq	0x1a90
000000000000179a	movq	%rax, -0x20(%rbp)
000000000000179e	jmp	0x1729
00000000000017a3	movl	$0x0, -0x4(%rbp)
00000000000017aa	movl	-0x4(%rbp), %eax
00000000000017ad	addq	$0x30, %rsp
00000000000017b1	popq	%rbp
00000000000017b2	retq
00000000000017b3	nopw	%cs:(%rax,%rax)
_free_map:
00000000000017c0	pushq	%rbp
00000000000017c1	movq	%rsp, %rbp
00000000000017c4	subq	$0x30, %rsp
00000000000017c8	movq	%rdi, -0x8(%rbp)
00000000000017cc	movq	-0x8(%rbp), %rdi
00000000000017d0	cmpq	$0x0, 0x10(%rdi)
00000000000017d5	je	0x1818
00000000000017db	movq	-0x8(%rbp), %rax
00000000000017df	cmpq	$0x0, 0x8(%rax)
00000000000017e4	je	0x17fb
00000000000017ea	movq	-0x8(%rbp), %rax
00000000000017ee	movq	0x8(%rax), %rax
00000000000017f2	movq	%rax, -0x18(%rbp)
00000000000017f6	jmp	0x1808
00000000000017fb	xorl	%eax, %eax
00000000000017fd	movl	%eax, %ecx
00000000000017ff	movq	%rcx, -0x18(%rbp)
0000000000001803	jmp	0x1808
0000000000001808	movq	-0x18(%rbp), %rax
000000000000180c	movq	-0x8(%rbp), %rcx
0000000000001810	movq	0x10(%rcx), %rcx
0000000000001814	movq	%rax, 0x8(%rcx)
0000000000001818	movq	-0x8(%rbp), %rax
000000000000181c	cmpq	$0x0, 0x8(%rax)
0000000000001821	je	0x1864
0000000000001827	movq	-0x8(%rbp), %rax
000000000000182b	cmpq	$0x0, 0x10(%rax)
0000000000001830	je	0x1847
0000000000001836	movq	-0x8(%rbp), %rax
000000000000183a	movq	0x10(%rax), %rax
000000000000183e	movq	%rax, -0x20(%rbp)
0000000000001842	jmp	0x1854
0000000000001847	xorl	%eax, %eax
0000000000001849	movl	%eax, %ecx
000000000000184b	movq	%rcx, -0x20(%rbp)
000000000000184f	jmp	0x1854
0000000000001854	movq	-0x20(%rbp), %rax
0000000000001858	movq	-0x8(%rbp), %rcx
000000000000185c	movq	0x8(%rcx), %rcx
0000000000001860	movq	%rax, 0x10(%rcx)
0000000000001864	movq	-0x8(%rbp), %rax
0000000000001868	cmpl	$0x2, 0x18(%rax)
000000000000186c	jb	0x188a
0000000000001872	movq	-0x8(%rbp), %rax
0000000000001876	movq	(%rax), %rax
0000000000001879	movq	0x8(%rax), %rax
000000000000187d	addq	$0x20, %rax
0000000000001881	movq	%rax, -0x10(%rbp)
0000000000001885	jmp	0x18cf
000000000000188a	movq	-0x8(%rbp), %rax
000000000000188e	cmpl	$0x0, 0x18(%rax)
0000000000001892	jne	0x18b0
0000000000001898	callq	0x2dd6
000000000000189d	movl	$0x4, %ecx
00000000000018a2	cltd
00000000000018a3	idivl	%ecx
00000000000018a5	imull	$0x64, %eax, %eax
00000000000018a8	movl	%eax, -0x24(%rbp)
00000000000018ab	jmp	0x18be
00000000000018b0	callq	0x2dd6
00000000000018b5	imull	$0xa, %eax, %eax
00000000000018b8	imull	$0x64, %eax, %eax
00000000000018bb	movl	%eax, -0x24(%rbp)
00000000000018be	movl	-0x24(%rbp), %eax
00000000000018c1	movslq	%eax, %rcx
00000000000018c4	addq	$0xc80, %rcx
00000000000018cb	movq	%rcx, -0x10(%rbp)
00000000000018cf	movq	-0x8(%rbp), %rax
00000000000018d3	movq	0x20(%rax), %rdi
00000000000018d7	movq	-0x10(%rbp), %rax
00000000000018db	addq	$0x30, %rax
00000000000018df	movq	%rax, %rsi
00000000000018e2	callq	0x2de2
00000000000018e7	movl	%eax, -0x28(%rbp)
00000000000018ea	addq	$0x30, %rsp
00000000000018ee	popq	%rbp
00000000000018ef	retq
_free_ptr:
00000000000018f0	pushq	%rbp
00000000000018f1	movq	%rsp, %rbp
00000000000018f4	subq	$0x20, %rsp
00000000000018f8	movq	%rdi, -0x8(%rbp)
00000000000018fc	movl	%esi, -0xc(%rbp)
00000000000018ff	callq	0x11f0
0000000000001904	movq	%rax, -0x18(%rbp)
0000000000001908	cmpq	$0x0, -0x18(%rbp)
000000000000190d	je	0x19c0
0000000000001913	movq	-0x18(%rbp), %rax
0000000000001917	cmpl	$0x0, 0x1c(%rax)
000000000000191b	jne	0x19af
0000000000001921	movq	-0x8(%rbp), %rdi
0000000000001925	movq	-0x18(%rbp), %rsi
0000000000001929	callq	0x16c0
000000000000192e	cmpl	$0x0, %eax
0000000000001931	je	0x19af
0000000000001937	movq	-0x18(%rbp), %rax
000000000000193b	cmpl	$0x2, 0x18(%rax)
000000000000193f	jne	0x1966
0000000000001945	movq	-0x18(%rbp), %rdi
0000000000001949	callq	0x1c60
000000000000194e	cmpq	$0x0, %rax
0000000000001952	jne	0x1966
0000000000001958	movq	-0x18(%rbp), %rdi
000000000000195c	callq	0x17c0
0000000000001961	jmp	0x19aa
0000000000001966	movq	-0x18(%rbp), %rax
000000000000196a	cmpl	$0x2, 0x18(%rax)
000000000000196e	je	0x19a5
0000000000001974	movq	-0x18(%rbp), %rax
0000000000001978	movl	0x18(%rax), %edi
000000000000197b	callq	0x22e0
0000000000001980	cmpl	$0x1, %eax
0000000000001983	jle	0x19a5
0000000000001989	movq	-0x18(%rbp), %rdi
000000000000198d	callq	0x1c60
0000000000001992	cmpq	$0x0, %rax
0000000000001996	jne	0x19a5
000000000000199c	movq	-0x18(%rbp), %rdi
00000000000019a0	callq	0x17c0
00000000000019a5	jmp	0x19aa
00000000000019aa	jmp	0x19c0
00000000000019af	movq	-0x18(%rbp), %rax
00000000000019b3	movq	0x8(%rax), %rax
00000000000019b7	movq	%rax, -0x18(%rbp)
00000000000019bb	jmp	0x1908
00000000000019c0	addq	$0x20, %rsp
00000000000019c4	popq	%rbp
00000000000019c5	retq
00000000000019c6	nop
00000000000019c7	nop
00000000000019c8	nop
00000000000019c9	nop
00000000000019ca	nop
00000000000019cb	nop
00000000000019cc	nop
00000000000019cd	nop
00000000000019ce	nop
00000000000019cf	nop
_get_ptr_id:
00000000000019d0	pushq	%rbp
00000000000019d1	movq	%rsp, %rbp
00000000000019d4	subq	$0x30, %rsp
00000000000019d8	movq	%rdi, -0x8(%rbp)
00000000000019dc	movl	%esi, -0xc(%rbp)
00000000000019df	movl	$0x0, -0x1c(%rbp)
00000000000019e6	movl	$0x0, -0x20(%rbp)
00000000000019ed	xorl	%eax, %eax
00000000000019ef	movb	%al, %cl
00000000000019f1	movl	-0x1c(%rbp), %eax
00000000000019f4	cmpl	-0xc(%rbp), %eax
00000000000019f7	movb	%cl, -0x21(%rbp)
00000000000019fa	jge	0x1a24
0000000000001a00	movq	-0x8(%rbp), %rdi
0000000000001a04	movl	-0x1c(%rbp), %eax
0000000000001a07	movl	%eax, %ecx
0000000000001a09	addl	$0x1, %ecx
0000000000001a0c	movl	%ecx, -0x1c(%rbp)
0000000000001a0f	movl	%eax, %esi
0000000000001a11	callq	0x1a90
0000000000001a16	movq	%rax, -0x18(%rbp)
0000000000001a1a	cmpq	$0x0, %rax
0000000000001a1e	setne	%dl
0000000000001a21	movb	%dl, -0x21(%rbp)
0000000000001a24	movb	-0x21(%rbp), %al
0000000000001a27	testb	$0x1, %al
0000000000001a29	jne	0x1a34
0000000000001a2f	jmp	0x1a54
0000000000001a34	movl	$0x1000, %eax
0000000000001a39	movl	$0x400, %ecx
0000000000001a3e	movq	-0x8(%rbp), %rdx
0000000000001a42	cmpl	$0x0, 0x18(%rdx)
0000000000001a46	cmovel	%ecx, %eax
0000000000001a49	addl	-0x20(%rbp), %eax
0000000000001a4c	movl	%eax, -0x20(%rbp)
0000000000001a4f	jmp	0x19ed
0000000000001a54	movl	$0x64, %eax
0000000000001a59	movl	$0x1, %ecx
0000000000001a5e	movq	-0x8(%rbp), %rdx
0000000000001a62	movq	0x20(%rdx), %rdx
0000000000001a66	addq	$0x30, %rdx
0000000000001a6a	movq	-0x8(%rbp), %rsi
0000000000001a6e	cmpl	$0x2, 0x18(%rsi)
0000000000001a72	cmovel	%ecx, %eax
0000000000001a75	movslq	%eax, %rsi
0000000000001a78	shlq	$0x5, %rsi
0000000000001a7c	addq	%rsi, %rdx
0000000000001a7f	movslq	-0x20(%rbp), %rsi
0000000000001a83	addq	%rsi, %rdx
0000000000001a86	movq	%rdx, %rax
0000000000001a89	addq	$0x30, %rsp
0000000000001a8d	popq	%rbp
0000000000001a8e	retq
0000000000001a8f	nop
_get_shield_id:
0000000000001a90	pushq	%rbp
0000000000001a91	movq	%rsp, %rbp
0000000000001a94	subq	$0x20, %rsp
0000000000001a98	movq	%rdi, -0x10(%rbp)
0000000000001a9c	movl	%esi, -0x14(%rbp)
0000000000001a9f	movq	-0x10(%rbp), %rdi
0000000000001aa3	cmpl	$0x2, 0x18(%rdi)
0000000000001aa7	jne	0x1ac4
0000000000001aad	cmpl	$0x0, -0x14(%rbp)
0000000000001ab1	jle	0x1ac4
0000000000001ab7	movq	$0x0, -0x8(%rbp)
0000000000001abf	jmp	0x1af6
0000000000001ac4	cmpl	$0x64, -0x14(%rbp)
0000000000001ac8	jl	0x1adb
0000000000001ace	movq	$0x0, -0x8(%rbp)
0000000000001ad6	jmp	0x1af6
0000000000001adb	movq	-0x10(%rbp), %rax
0000000000001adf	movq	0x20(%rax), %rax
0000000000001ae3	addq	$0x30, %rax
0000000000001ae7	movl	-0x14(%rbp), %esi
0000000000001aea	movq	%rax, %rdi
0000000000001aed	callq	0x1b00
0000000000001af2	movq	%rax, -0x8(%rbp)
0000000000001af6	movq	-0x8(%rbp), %rax
0000000000001afa	addq	$0x20, %rsp
0000000000001afe	popq	%rbp
0000000000001aff	retq
_get_shield_by_id:
0000000000001b00	pushq	%rbp
0000000000001b01	movq	%rsp, %rbp
0000000000001b04	movq	%rdi, -0x8(%rbp)
0000000000001b08	movl	%esi, -0xc(%rbp)
0000000000001b0b	movq	-0x8(%rbp), %rdi
0000000000001b0f	movslq	-0xc(%rbp), %rax
0000000000001b13	shlq	$0x5, %rax
0000000000001b17	addq	%rax, %rdi
0000000000001b1a	movq	%rdi, %rax
0000000000001b1d	popq	%rbp
0000000000001b1e	retq
0000000000001b1f	nop
_create_shields:
0000000000001b20	pushq	%rbp
0000000000001b21	movq	%rsp, %rbp
0000000000001b24	subq	$0x30, %rsp
0000000000001b28	movq	%rdi, -0x8(%rbp)
0000000000001b2c	movl	%esi, -0xc(%rbp)
0000000000001b2f	movq	%rdx, -0x18(%rbp)
0000000000001b33	cmpl	$0x2, -0xc(%rbp)
0000000000001b37	jne	0x1b4b
0000000000001b3d	movq	-0x18(%rbp), %rax
0000000000001b41	movl	%eax, %ecx
0000000000001b43	movl	%ecx, -0x20(%rbp)
0000000000001b46	jmp	0x1b96
0000000000001b4b	cmpl	$0x0, -0xc(%rbp)
0000000000001b4f	jne	0x1b7b
0000000000001b55	callq	0x2dd6
0000000000001b5a	movl	$0x64, %ecx
0000000000001b5f	movl	$0x4, %edx
0000000000001b64	movl	%edx, -0x24(%rbp)
0000000000001b67	cltd
0000000000001b68	movl	-0x24(%rbp), %esi
0000000000001b6b	idivl	%esi
0000000000001b6d	imull	$0x64, %eax, %eax
0000000000001b70	cltd
0000000000001b71	idivl	%ecx
0000000000001b73	movl	%eax, -0x20(%rbp)
0000000000001b76	jmp	0x1b91
0000000000001b7b	callq	0x2dd6
0000000000001b80	movl	$0x64, %ecx
0000000000001b85	imull	$0xa, %eax, %eax
0000000000001b88	imull	$0x64, %eax, %eax
0000000000001b8b	cltd
0000000000001b8c	idivl	%ecx
0000000000001b8e	movl	%eax, -0x20(%rbp)
0000000000001b91	jmp	0x1b96
0000000000001b96	movl	$0x0, -0x1c(%rbp)
0000000000001b9d	movl	$0x64, %eax
0000000000001ba2	movl	$0x1, %ecx
0000000000001ba7	movl	-0x1c(%rbp), %edx
0000000000001baa	cmpl	$0x2, -0xc(%rbp)
0000000000001bae	cmovel	%ecx, %eax
0000000000001bb1	cmpl	%eax, %edx
0000000000001bb3	jge	0x1bd6
0000000000001bb9	movq	-0x8(%rbp), %rdi
0000000000001bbd	movl	-0x1c(%rbp), %esi
0000000000001bc0	movl	-0x20(%rbp), %edx
0000000000001bc3	callq	0x1be0
0000000000001bc8	movl	-0x1c(%rbp), %edx
0000000000001bcb	addl	$0x1, %edx
0000000000001bce	movl	%edx, -0x1c(%rbp)
0000000000001bd1	jmp	0x1b9d
0000000000001bd6	addq	$0x30, %rsp
0000000000001bda	popq	%rbp
0000000000001bdb	retq
0000000000001bdc	nopl	(%rax)
_add_shield:
0000000000001be0	pushq	%rbp
0000000000001be1	movq	%rsp, %rbp
0000000000001be4	movq	%rdi, -0x8(%rbp)
0000000000001be8	movl	%esi, -0xc(%rbp)
0000000000001beb	movl	%edx, -0x10(%rbp)
0000000000001bee	movq	$0x0, -0x18(%rbp)
0000000000001bf6	cmpq	$0x0, -0x18(%rbp)
0000000000001bfb	jne	0x1c59
0000000000001c01	movq	$-0x1, %rax
0000000000001c08	movq	-0x8(%rbp), %rcx
0000000000001c0c	movslq	-0xc(%rbp), %rdx
0000000000001c10	shlq	$0x5, %rdx
0000000000001c14	addq	%rdx, %rcx
0000000000001c17	movq	%rcx, -0x18(%rbp)
0000000000001c1b	cmpq	%rax, -0x18(%rbp)
0000000000001c1f	jne	0x1c2a
0000000000001c25	jmp	0x1c59
0000000000001c2a	movl	-0xc(%rbp), %eax
0000000000001c2d	movw	%ax, %cx
0000000000001c30	movq	-0x18(%rbp), %rdx
0000000000001c34	movw	%cx, (%rdx)
0000000000001c37	movq	-0x18(%rbp), %rdx
0000000000001c3b	movq	$0x0, 0x10(%rdx)
0000000000001c43	movslq	-0x10(%rbp), %rdx
0000000000001c47	movq	-0x18(%rbp), %rsi
0000000000001c4b	movq	%rdx, 0x8(%rsi)
0000000000001c4f	movq	-0x18(%rbp), %rdx
0000000000001c53	movw	$0x1, 0x18(%rdx)
0000000000001c59	popq	%rbp
0000000000001c5a	retq
0000000000001c5b	nop
0000000000001c5c	nop
0000000000001c5d	nop
0000000000001c5e	nop
0000000000001c5f	nop
_get_used_size:
0000000000001c60	pushq	%rbp
0000000000001c61	movq	%rsp, %rbp
0000000000001c64	subq	$0x20, %rsp
0000000000001c68	movq	%rdi, -0x8(%rbp)
0000000000001c6c	movq	$0x0, -0x18(%rbp)
0000000000001c74	movq	-0x8(%rbp), %rdi
0000000000001c78	movq	(%rdi), %rdi
0000000000001c7b	movq	%rdi, -0x10(%rbp)
0000000000001c7f	cmpq	$0x0, -0x10(%rbp)
0000000000001c84	je	0x1cc9
0000000000001c8a	movq	-0x10(%rbp), %rax
0000000000001c8e	movswl	0x18(%rax), %ecx
0000000000001c92	cmpl	$0x0, %ecx
0000000000001c95	jne	0x1cab
0000000000001c9b	movq	-0x10(%rbp), %rax
0000000000001c9f	movq	0x8(%rax), %rax
0000000000001ca3	addq	-0x18(%rbp), %rax
0000000000001ca7	movq	%rax, -0x18(%rbp)
0000000000001cab	movq	-0x8(%rbp), %rdi
0000000000001caf	movq	-0x10(%rbp), %rax
0000000000001cb3	movswl	(%rax), %ecx
0000000000001cb6	addl	$0x1, %ecx
0000000000001cb9	movl	%ecx, %esi
0000000000001cbb	callq	0x1a90
0000000000001cc0	movq	%rax, -0x10(%rbp)
0000000000001cc4	jmp	0x1c7f
0000000000001cc9	movq	-0x18(%rbp), %rax
0000000000001ccd	addq	$0x20, %rsp
0000000000001cd1	popq	%rbp
0000000000001cd2	retq
0000000000001cd3	nopw	%cs:(%rax,%rax)
_get_free_size:
0000000000001ce0	pushq	%rbp
0000000000001ce1	movq	%rsp, %rbp
0000000000001ce4	subq	$0x20, %rsp
0000000000001ce8	movq	%rdi, -0x10(%rbp)
0000000000001cec	movq	-0x10(%rbp), %rdi
0000000000001cf0	callq	0x1c60
0000000000001cf5	movq	%rax, -0x18(%rbp)
0000000000001cf9	movq	-0x10(%rbp), %rax
0000000000001cfd	cmpl	$0x0, 0x18(%rax)
0000000000001d01	jne	0x1d27
0000000000001d07	callq	0x2dd6
0000000000001d0c	movl	$0x4, %ecx
0000000000001d11	cltd
0000000000001d12	idivl	%ecx
0000000000001d14	imull	$0x64, %eax, %eax
0000000000001d17	movslq	%eax, %rsi
0000000000001d1a	subq	-0x18(%rbp), %rsi
0000000000001d1e	movq	%rsi, -0x8(%rbp)
0000000000001d22	jmp	0x1d58
0000000000001d27	movq	-0x10(%rbp), %rax
0000000000001d2b	cmpl	$0x1, 0x18(%rax)
0000000000001d2f	jne	0x1d50
0000000000001d35	callq	0x2dd6
0000000000001d3a	imull	$0xa, %eax, %eax
0000000000001d3d	imull	$0x64, %eax, %eax
0000000000001d40	movslq	%eax, %rcx
0000000000001d43	subq	-0x18(%rbp), %rcx
0000000000001d47	movq	%rcx, -0x8(%rbp)
0000000000001d4b	jmp	0x1d58
0000000000001d50	movq	$0x0, -0x8(%rbp)
0000000000001d58	movq	-0x8(%rbp), %rax
0000000000001d5c	addq	$0x20, %rsp
0000000000001d60	popq	%rbp
0000000000001d61	retq
0000000000001d62	nopw	%cs:(%rax,%rax)
_get_free_number_places:
0000000000001d70	pushq	%rbp
0000000000001d71	movq	%rsp, %rbp
0000000000001d74	subq	$0x20, %rsp
0000000000001d78	movq	%rdi, -0x8(%rbp)
0000000000001d7c	movq	$0x0, -0x18(%rbp)
0000000000001d84	movq	-0x8(%rbp), %rdi
0000000000001d88	movq	(%rdi), %rdi
0000000000001d8b	movq	%rdi, -0x10(%rbp)
0000000000001d8f	cmpq	$0x0, -0x10(%rbp)
0000000000001d94	je	0x1dd5
0000000000001d9a	movq	-0x10(%rbp), %rax
0000000000001d9e	movswl	0x18(%rax), %ecx
0000000000001da2	cmpl	$0x1, %ecx
0000000000001da5	jne	0x1db7
0000000000001dab	movq	-0x18(%rbp), %rax
0000000000001daf	addq	$0x1, %rax
0000000000001db3	movq	%rax, -0x18(%rbp)
0000000000001db7	movq	-0x8(%rbp), %rdi
0000000000001dbb	movq	-0x10(%rbp), %rax
0000000000001dbf	movswl	(%rax), %ecx
0000000000001dc2	addl	$0x1, %ecx
0000000000001dc5	movl	%ecx, %esi
0000000000001dc7	callq	0x1a90
0000000000001dcc	movq	%rax, -0x10(%rbp)
0000000000001dd0	jmp	0x1d8f
0000000000001dd5	movq	-0x18(%rbp), %rax
0000000000001dd9	addq	$0x20, %rsp
0000000000001ddd	popq	%rbp
0000000000001dde	retq
0000000000001ddf	nop
_get_free_shield:
0000000000001de0	pushq	%rbp
0000000000001de1	movq	%rsp, %rbp
0000000000001de4	subq	$0x20, %rsp
0000000000001de8	movq	%rdi, -0x10(%rbp)
0000000000001dec	movq	%rsi, -0x18(%rbp)
0000000000001df0	movq	-0x10(%rbp), %rsi
0000000000001df4	movq	(%rsi), %rsi
0000000000001df7	movq	%rsi, -0x20(%rbp)
0000000000001dfb	cmpq	$0x0, -0x20(%rbp)
0000000000001e00	je	0x1e54
0000000000001e06	movq	-0x20(%rbp), %rax
0000000000001e0a	movswl	0x18(%rax), %ecx
0000000000001e0e	cmpl	$0x1, %ecx
0000000000001e11	jne	0x1e36
0000000000001e17	movq	-0x20(%rbp), %rax
0000000000001e1b	movq	0x8(%rax), %rax
0000000000001e1f	cmpq	-0x18(%rbp), %rax
0000000000001e23	jb	0x1e36
0000000000001e29	movq	-0x20(%rbp), %rax
0000000000001e2d	movq	%rax, -0x8(%rbp)
0000000000001e31	jmp	0x1e5c
0000000000001e36	movq	-0x10(%rbp), %rdi
0000000000001e3a	movq	-0x20(%rbp), %rax
0000000000001e3e	movswl	(%rax), %ecx
0000000000001e41	addl	$0x1, %ecx
0000000000001e44	movl	%ecx, %esi
0000000000001e46	callq	0x1a90
0000000000001e4b	movq	%rax, -0x20(%rbp)
0000000000001e4f	jmp	0x1dfb
0000000000001e54	movq	$0x0, -0x8(%rbp)
0000000000001e5c	movq	-0x8(%rbp), %rax
0000000000001e60	addq	$0x20, %rsp
0000000000001e64	popq	%rbp
0000000000001e65	retq
0000000000001e66	nopw	%cs:(%rax,%rax)
_get_size_place:
0000000000001e70	pushq	%rbp
0000000000001e71	movq	%rsp, %rbp
0000000000001e74	subq	$0x10, %rsp
0000000000001e78	movl	%edi, -0xc(%rbp)
0000000000001e7b	cmpl	$0x0, -0xc(%rbp)
0000000000001e7f	jne	0x1eaf
0000000000001e85	callq	0x2dd6
0000000000001e8a	movl	$0x64, %ecx
0000000000001e8f	movl	$0x4, %edx
0000000000001e94	movl	%edx, -0x10(%rbp)
0000000000001e97	cltd
0000000000001e98	movl	-0x10(%rbp), %esi
0000000000001e9b	idivl	%esi
0000000000001e9d	imull	$0x64, %eax, %eax
0000000000001ea0	cltd
0000000000001ea1	idivl	%ecx
0000000000001ea3	movslq	%eax, %rdi
0000000000001ea6	movq	%rdi, -0x8(%rbp)
0000000000001eaa	jmp	0x1ee0
0000000000001eaf	cmpl	$0x0, -0xc(%rbp)
0000000000001eb3	jne	0x1ed8
0000000000001eb9	callq	0x2dd6
0000000000001ebe	movl	$0x64, %ecx
0000000000001ec3	imull	$0xa, %eax, %eax
0000000000001ec6	imull	$0x64, %eax, %eax
0000000000001ec9	cltd
0000000000001eca	idivl	%ecx
0000000000001ecc	movslq	%eax, %rsi
0000000000001ecf	movq	%rsi, -0x8(%rbp)
0000000000001ed3	jmp	0x1ee0
0000000000001ed8	movq	$0x0, -0x8(%rbp)
0000000000001ee0	movq	-0x8(%rbp), %rax
0000000000001ee4	addq	$0x10, %rsp
0000000000001ee8	popq	%rbp
0000000000001ee9	retq
0000000000001eea	nop
0000000000001eeb	nop
0000000000001eec	nop
0000000000001eed	nop
0000000000001eee	nop
0000000000001eef	nop
_realloc_memory:
0000000000001ef0	pushq	%rbp
0000000000001ef1	movq	%rsp, %rbp
0000000000001ef4	subq	$0x50, %rsp
0000000000001ef8	movq	%rdi, -0x10(%rbp)
0000000000001efc	movq	%rsi, -0x18(%rbp)
0000000000001f00	callq	0x11f0
0000000000001f05	movq	%rax, -0x20(%rbp)
0000000000001f09	cmpq	$0x0, -0x20(%rbp)
0000000000001f0e	je	0x200d
0000000000001f14	movq	-0x20(%rbp), %rax
0000000000001f18	cmpl	$0x0, 0x1c(%rax)
0000000000001f1c	jne	0x1f6a
0000000000001f22	movq	-0x10(%rbp), %rax
0000000000001f26	movq	-0x20(%rbp), %rdi
0000000000001f2a	movq	%rax, -0x38(%rbp)
0000000000001f2e	callq	0x15e0
0000000000001f33	movq	-0x38(%rbp), %rdi
0000000000001f37	cmpq	%rax, %rdi
0000000000001f3a	jb	0x1f6a
0000000000001f40	movq	-0x10(%rbp), %rax
0000000000001f44	movq	-0x20(%rbp), %rdi
0000000000001f48	movq	%rax, -0x40(%rbp)
0000000000001f4c	callq	0x15e0
0000000000001f51	movq	-0x20(%rbp), %rsi
0000000000001f55	movq	%rax, %rdi
0000000000001f58	callq	0x1630
0000000000001f5d	movq	-0x40(%rbp), %rsi
0000000000001f61	cmpq	%rax, %rsi
0000000000001f64	jbe	0x1f7b
0000000000001f6a	movq	-0x20(%rbp), %rax
0000000000001f6e	movq	0x8(%rax), %rax
0000000000001f72	movq	%rax, -0x20(%rbp)
0000000000001f76	jmp	0x1f09
0000000000001f7b	movq	-0x20(%rbp), %rdi
0000000000001f7f	movq	-0x10(%rbp), %rsi
0000000000001f83	movq	-0x18(%rbp), %rdx
0000000000001f87	callq	0x2020
0000000000001f8c	movq	%rax, -0x28(%rbp)
0000000000001f90	cmpq	$0x0, -0x28(%rbp)
0000000000001f95	jne	0x1fa8
0000000000001f9b	movq	$0x0, -0x8(%rbp)
0000000000001fa3	jmp	0x2015
0000000000001fa8	movq	-0x18(%rbp), %rdi
0000000000001fac	callq	0x10b0
0000000000001fb1	movq	%rax, -0x30(%rbp)
0000000000001fb5	cmpq	$0x0, %rax
0000000000001fb9	jne	0x1fcc
0000000000001fbf	movq	$0x0, -0x8(%rbp)
0000000000001fc7	jmp	0x2015
0000000000001fcc	movq	-0x30(%rbp), %rax
0000000000001fd0	movq	0x10(%rax), %rdi
0000000000001fd4	movq	-0x28(%rbp), %rax
0000000000001fd8	movq	0x10(%rax), %rsi
0000000000001fdc	movq	-0x28(%rbp), %rax
0000000000001fe0	movq	0x8(%rax), %rdx
0000000000001fe4	callq	0x20e0
0000000000001fe9	xorl	%esi, %esi
0000000000001feb	movq	-0x28(%rbp), %rdx
0000000000001fef	movq	0x10(%rdx), %rdi
0000000000001ff3	movq	%rax, -0x48(%rbp)
0000000000001ff7	callq	0x18f0
0000000000001ffc	movq	-0x30(%rbp), %rax
0000000000002000	movq	0x10(%rax), %rax
0000000000002004	movq	%rax, -0x8(%rbp)
0000000000002008	jmp	0x2015
000000000000200d	movq	$0x0, -0x8(%rbp)
0000000000002015	movq	-0x8(%rbp), %rax
0000000000002019	addq	$0x50, %rsp
000000000000201d	popq	%rbp
000000000000201e	retq
000000000000201f	nop
_get_shield_r:
0000000000002020	pushq	%rbp
0000000000002021	movq	%rsp, %rbp
0000000000002024	subq	$0x30, %rsp
0000000000002028	movq	%rdi, -0x10(%rbp)
000000000000202c	movq	%rsi, -0x18(%rbp)
0000000000002030	movq	%rdx, -0x20(%rbp)
0000000000002034	movq	-0x10(%rbp), %rdx
0000000000002038	movq	(%rdx), %rdx
000000000000203b	movq	%rdx, -0x28(%rbp)
000000000000203f	cmpq	$0x0, -0x28(%rbp)
0000000000002044	je	0x207f
000000000000204a	movq	-0x28(%rbp), %rax
000000000000204e	movq	0x10(%rax), %rax
0000000000002052	cmpq	-0x18(%rbp), %rax
0000000000002056	jne	0x2061
000000000000205c	jmp	0x207f
0000000000002061	movq	-0x10(%rbp), %rdi
0000000000002065	movq	-0x28(%rbp), %rax
0000000000002069	movswl	(%rax), %ecx
000000000000206c	addl	$0x1, %ecx
000000000000206f	movl	%ecx, %esi
0000000000002071	callq	0x1a90
0000000000002076	movq	%rax, -0x28(%rbp)
000000000000207a	jmp	0x203f
000000000000207f	cmpq	$0x0, -0x28(%rbp)
0000000000002084	je	0x20c8
000000000000208a	movq	-0x20(%rbp), %rax
000000000000208e	movq	-0x10(%rbp), %rcx
0000000000002092	movl	0x18(%rcx), %edi
0000000000002095	movq	%rax, -0x30(%rbp)
0000000000002099	callq	0x1e70
000000000000209e	movq	-0x30(%rbp), %rcx
00000000000020a2	cmpq	%rax, %rcx
00000000000020a5	ja	0x20c8
00000000000020ab	movq	-0x20(%rbp), %rax
00000000000020af	movq	-0x28(%rbp), %rcx
00000000000020b3	movq	%rax, 0x8(%rcx)
00000000000020b7	movq	-0x28(%rbp), %rax
00000000000020bb	movq	0x10(%rax), %rax
00000000000020bf	movq	%rax, -0x8(%rbp)
00000000000020c3	jmp	0x20d0
00000000000020c8	movq	-0x28(%rbp), %rax
00000000000020cc	movq	%rax, -0x8(%rbp)
00000000000020d0	movq	-0x8(%rbp), %rax
00000000000020d4	addq	$0x30, %rsp
00000000000020d8	popq	%rbp
00000000000020d9	retq
00000000000020da	nopw	(%rax,%rax)
_ft_memcpy:
00000000000020e0	pushq	%rbp
00000000000020e1	movq	%rsp, %rbp
00000000000020e4	movq	%rdi, -0x8(%rbp)
00000000000020e8	movq	%rsi, -0x10(%rbp)
00000000000020ec	movq	%rdx, -0x18(%rbp)
00000000000020f0	movq	-0x8(%rbp), %rdx
00000000000020f4	movq	%rdx, -0x20(%rbp)
00000000000020f8	movq	-0x10(%rbp), %rdx
00000000000020fc	movq	%rdx, -0x28(%rbp)
0000000000002100	movq	$0x0, -0x30(%rbp)
0000000000002108	movq	-0x30(%rbp), %rax
000000000000210c	cmpq	-0x18(%rbp), %rax
0000000000002110	jae	0x2149
0000000000002116	movq	-0x28(%rbp), %rax
000000000000211a	movq	%rax, %rcx
000000000000211d	addq	$0x1, %rcx
0000000000002121	movq	%rcx, -0x28(%rbp)
0000000000002125	movb	(%rax), %dl
0000000000002127	movq	-0x20(%rbp), %rax
000000000000212b	movq	%rax, %rcx
000000000000212e	addq	$0x1, %rcx
0000000000002132	movq	%rcx, -0x20(%rbp)
0000000000002136	movb	%dl, (%rax)
0000000000002138	movq	-0x30(%rbp), %rax
000000000000213c	addq	$0x1, %rax
0000000000002140	movq	%rax, -0x30(%rbp)
0000000000002144	jmp	0x2108
0000000000002149	movq	-0x8(%rbp), %rax
000000000000214d	popq	%rbp
000000000000214e	retq
000000000000214f	nop
_search_ptr_shield:
0000000000002150	pushq	%rbp
0000000000002151	movq	%rsp, %rbp
0000000000002154	subq	$0x30, %rsp
0000000000002158	movq	%rdi, -0x10(%rbp)
000000000000215c	movq	%rsi, -0x18(%rbp)
0000000000002160	movq	-0x18(%rbp), %rsi
0000000000002164	movq	(%rsi), %rsi
0000000000002167	movq	%rsi, -0x20(%rbp)
000000000000216b	movq	-0x18(%rbp), %rdi
000000000000216f	callq	0x15e0
0000000000002174	movq	%rax, -0x28(%rbp)
0000000000002178	movq	-0x10(%rbp), %rax
000000000000217c	cmpq	-0x28(%rbp), %rax
0000000000002180	jb	0x21a8
0000000000002186	movq	-0x10(%rbp), %rax
000000000000218a	movq	-0x28(%rbp), %rdi
000000000000218e	movq	-0x18(%rbp), %rsi
0000000000002192	movq	%rax, -0x30(%rbp)
0000000000002196	callq	0x1630
000000000000219b	movq	-0x30(%rbp), %rsi
000000000000219f	cmpq	%rax, %rsi
00000000000021a2	jbe	0x21b5
00000000000021a8	movq	$0x0, -0x8(%rbp)
00000000000021b0	jmp	0x220a
00000000000021b5	jmp	0x21ba
00000000000021ba	cmpq	$0x0, -0x20(%rbp)
00000000000021bf	je	0x2202
00000000000021c5	movq	-0x20(%rbp), %rax
00000000000021c9	movq	0x10(%rax), %rax
00000000000021cd	cmpq	-0x10(%rbp), %rax
00000000000021d1	jne	0x21e4
00000000000021d7	movq	-0x20(%rbp), %rax
00000000000021db	movq	%rax, -0x8(%rbp)
00000000000021df	jmp	0x220a
00000000000021e4	movq	-0x18(%rbp), %rdi
00000000000021e8	movq	-0x20(%rbp), %rax
00000000000021ec	movswl	(%rax), %ecx
00000000000021ef	addl	$0x1, %ecx
00000000000021f2	movl	%ecx, %esi
00000000000021f4	callq	0x1a90
00000000000021f9	movq	%rax, -0x20(%rbp)
00000000000021fd	jmp	0x21ba
0000000000002202	movq	$0x0, -0x8(%rbp)
000000000000220a	movq	-0x8(%rbp), %rax
000000000000220e	addq	$0x30, %rsp
0000000000002212	popq	%rbp
0000000000002213	retq
0000000000002214	nopw	%cs:(%rax,%rax)
_search_ptr:
0000000000002220	pushq	%rbp
0000000000002221	movq	%rsp, %rbp
0000000000002224	subq	$0x20, %rsp
0000000000002228	movq	%rdi, -0x10(%rbp)
000000000000222c	callq	0x11f0
0000000000002231	movq	%rax, -0x18(%rbp)
0000000000002235	cmpq	$0x0, -0x18(%rbp)
000000000000223a	je	0x228d
0000000000002240	movq	-0x18(%rbp), %rax
0000000000002244	cmpl	$0x0, 0x1c(%rax)
0000000000002248	jne	0x227c
000000000000224e	movq	-0x10(%rbp), %rdi
0000000000002252	movq	-0x18(%rbp), %rsi
0000000000002256	callq	0x2150
000000000000225b	movq	%rax, -0x20(%rbp)
000000000000225f	cmpq	$0x0, -0x20(%rbp)
0000000000002264	je	0x2277
000000000000226a	movq	-0x20(%rbp), %rax
000000000000226e	movq	%rax, -0x8(%rbp)
0000000000002272	jmp	0x2295
0000000000002277	jmp	0x227c
000000000000227c	movq	-0x18(%rbp), %rax
0000000000002280	movq	0x8(%rax), %rax
0000000000002284	movq	%rax, -0x18(%rbp)
0000000000002288	jmp	0x2235
000000000000228d	movq	$0x0, -0x8(%rbp)
0000000000002295	movq	-0x8(%rbp), %rax
0000000000002299	addq	$0x20, %rsp
000000000000229d	popq	%rbp
000000000000229e	retq
000000000000229f	nop
_show_hexa_pointer:
00000000000022a0	pushq	%rbp
00000000000022a1	movq	%rsp, %rbp
00000000000022a4	subq	$0x10, %rsp
00000000000022a8	movq	%rdi, -0x8(%rbp)
00000000000022ac	movq	-0x8(%rbp), %rdi
00000000000022b0	callq	0x2220
00000000000022b5	movq	%rax, -0x10(%rbp)
00000000000022b9	cmpq	$0x0, -0x10(%rbp)
00000000000022be	jne	0x22c9
00000000000022c4	jmp	0x22d2
00000000000022c9	movq	-0x10(%rbp), %rdi
00000000000022cd	callq	0x2af0
00000000000022d2	addq	$0x10, %rsp
00000000000022d6	popq	%rbp
00000000000022d7	retq
00000000000022d8	nop
00000000000022d9	nop
00000000000022da	nop
00000000000022db	nop
00000000000022dc	nop
00000000000022dd	nop
00000000000022de	nop
00000000000022df	nop
_get_count_zone:
00000000000022e0	pushq	%rbp
00000000000022e1	movq	%rsp, %rbp
00000000000022e4	subq	$0x20, %rsp
00000000000022e8	movl	%edi, -0x4(%rbp)
00000000000022eb	callq	0x11f0
00000000000022f0	movq	%rax, -0x10(%rbp)
00000000000022f4	movl	$0x0, -0x14(%rbp)
00000000000022fb	cmpq	$0x0, -0x10(%rbp)
0000000000002300	je	0x233e
0000000000002306	movq	-0x10(%rbp), %rax
000000000000230a	cmpl	$0x0, 0x1c(%rax)
000000000000230e	jne	0x232d
0000000000002314	movq	-0x10(%rbp), %rax
0000000000002318	movl	0x18(%rax), %ecx
000000000000231b	cmpl	-0x4(%rbp), %ecx
000000000000231e	jne	0x232d
0000000000002324	movl	-0x14(%rbp), %eax
0000000000002327	addl	$0x1, %eax
000000000000232a	movl	%eax, -0x14(%rbp)
000000000000232d	movq	-0x10(%rbp), %rax
0000000000002331	movq	0x8(%rax), %rax
0000000000002335	movq	%rax, -0x10(%rbp)
0000000000002339	jmp	0x22fb
000000000000233e	movl	-0x14(%rbp), %eax
0000000000002341	addq	$0x20, %rsp
0000000000002345	popq	%rbp
0000000000002346	retq
0000000000002347	nop
0000000000002348	nop
0000000000002349	nop
000000000000234a	nop
000000000000234b	nop
000000000000234c	nop
000000000000234d	nop
000000000000234e	nop
000000000000234f	nop
_print_pointer:
0000000000002350	pushq	%rbp
0000000000002351	movq	%rsp, %rbp
0000000000002354	subq	$0x10, %rsp
0000000000002358	leaq	0xbbd(%rip), %rax
000000000000235f	movq	%rdi, -0x8(%rbp)
0000000000002363	movq	$0x0, -0x10(%rbp)
000000000000236b	movq	%rax, %rdi
000000000000236e	callq	0x29b0
0000000000002373	cmpq	$0x0, -0x8(%rbp)
0000000000002378	je	0x23d2
000000000000237e	cmpq	$0x0, -0x8(%rbp)
0000000000002383	je	0x23d2
0000000000002389	leaq	0xb8f(%rip), %rsi
0000000000002390	movq	-0x8(%rbp), %rdi
0000000000002394	callq	0x26f0
0000000000002399	movq	%rax, -0x10(%rbp)
000000000000239d	cmpq	$0x0, -0x10(%rbp)
00000000000023a2	je	0x23c1
00000000000023a8	movq	-0x10(%rbp), %rdi
00000000000023ac	callq	0x29b0
00000000000023b1	xorl	%esi, %esi
00000000000023b3	movq	-0x10(%rbp), %rdi
00000000000023b7	callq	0x18f0
00000000000023bc	jmp	0x23cd
00000000000023c1	leaq	0xb68(%rip), %rdi
00000000000023c8	callq	0x29b0
00000000000023cd	jmp	0x23de
00000000000023d2	leaq	0xb57(%rip), %rdi
00000000000023d9	callq	0x29b0
00000000000023de	addq	$0x10, %rsp
00000000000023e2	popq	%rbp
00000000000023e3	retq
00000000000023e4	nopw	%cs:(%rax,%rax)
_print_shield:
00000000000023f0	pushq	%rbp
00000000000023f1	movq	%rsp, %rbp
00000000000023f4	subq	$0x10, %rsp
00000000000023f8	movq	%rdi, -0x8(%rbp)
00000000000023fc	movq	-0x8(%rbp), %rdi
0000000000002400	movswl	0x18(%rdi), %eax
0000000000002404	cmpl	$0x0, %eax
0000000000002407	jne	0x241e
000000000000240d	leaq	0xb1e(%rip), %rdi
0000000000002414	callq	0x29b0
0000000000002419	jmp	0x2423
000000000000241e	jmp	0x2479
0000000000002423	movq	-0x8(%rbp), %rax
0000000000002427	movq	0x10(%rax), %rdi
000000000000242b	callq	0x2350
0000000000002430	leaq	0xafc(%rip), %rdi
0000000000002437	callq	0x29b0
000000000000243c	movq	-0x8(%rbp), %rax
0000000000002440	movq	0x10(%rax), %rax
0000000000002444	movq	-0x8(%rbp), %rdi
0000000000002448	addq	0x8(%rdi), %rax
000000000000244c	movq	%rax, %rdi
000000000000244f	callq	0x2350
0000000000002454	leaq	0xadc(%rip), %rdi
000000000000245b	callq	0x29b0
0000000000002460	movq	-0x8(%rbp), %rax
0000000000002464	movq	0x8(%rax), %rdi
0000000000002468	callq	0x28d0
000000000000246d	leaq	0x9eb(%rip), %rdi
0000000000002474	callq	0x29b0
0000000000002479	addq	$0x10, %rsp
000000000000247d	popq	%rbp
000000000000247e	retq
000000000000247f	nop
_print_zone:
0000000000002480	pushq	%rbp
0000000000002481	movq	%rsp, %rbp
0000000000002484	subq	$0x30, %rsp
0000000000002488	movq	%rdi, -0x8(%rbp)
000000000000248c	movq	%rsi, -0x10(%rbp)
0000000000002490	movl	%edx, -0x14(%rbp)
0000000000002493	movq	$0x0, -0x28(%rbp)
000000000000249b	movq	-0x10(%rbp), %rsi
000000000000249f	movq	(%rsi), %rsi
00000000000024a2	movq	%rsi, -0x20(%rbp)
00000000000024a6	cmpl	$0x1, -0x14(%rbp)
00000000000024aa	jne	0x24de
00000000000024b0	movq	-0x8(%rbp), %rdi
00000000000024b4	callq	0x29b0
00000000000024b9	leaq	0xa77(%rip), %rdi
00000000000024c0	callq	0x29b0
00000000000024c5	movq	-0x10(%rbp), %rdi
00000000000024c9	movq	0x20(%rdi), %rdi
00000000000024cd	callq	0x2350
00000000000024d2	leaq	0xa62(%rip), %rdi
00000000000024d9	callq	0x29b0
00000000000024de	jmp	0x24e3
00000000000024e3	cmpq	$0x0, -0x20(%rbp)
00000000000024e8	je	0x2536
00000000000024ee	movq	-0x20(%rbp), %rdi
00000000000024f2	callq	0x23f0
00000000000024f7	movq	-0x20(%rbp), %rdi
00000000000024fb	movswl	0x18(%rdi), %eax
00000000000024ff	cmpl	$0x0, %eax
0000000000002502	jne	0x2518
0000000000002508	movq	-0x20(%rbp), %rax
000000000000250c	movq	0x8(%rax), %rax
0000000000002510	addq	-0x28(%rbp), %rax
0000000000002514	movq	%rax, -0x28(%rbp)
0000000000002518	movq	-0x10(%rbp), %rdi
000000000000251c	movq	-0x20(%rbp), %rax
0000000000002520	movswl	(%rax), %ecx
0000000000002523	addl	$0x1, %ecx
0000000000002526	movl	%ecx, %esi
0000000000002528	callq	0x1a90
000000000000252d	movq	%rax, -0x20(%rbp)
0000000000002531	jmp	0x24e3
0000000000002536	movq	-0x28(%rbp), %rax
000000000000253a	addq	$0x30, %rsp
000000000000253e	popq	%rbp
000000000000253f	retq
_print_tiny:
0000000000002540	pushq	%rbp
0000000000002541	movq	%rsp, %rbp
0000000000002544	subq	$0x20, %rsp
0000000000002548	callq	0x11f0
000000000000254d	movq	%rax, -0x8(%rbp)
0000000000002551	movq	$0x0, -0x10(%rbp)
0000000000002559	movl	$0x1, -0x14(%rbp)
0000000000002560	cmpq	$0x0, -0x8(%rbp)
0000000000002565	je	0x25ba
000000000000256b	movq	-0x8(%rbp), %rax
000000000000256f	cmpl	$0x0, 0x1c(%rax)
0000000000002573	jne	0x25a9
0000000000002579	movq	-0x8(%rbp), %rax
000000000000257d	cmpl	$0x0, 0x18(%rax)
0000000000002581	jne	0x25a9
0000000000002587	leaq	0x9af(%rip), %rdi
000000000000258e	movq	-0x8(%rbp), %rsi
0000000000002592	movl	-0x14(%rbp), %edx
0000000000002595	callq	0x2480
000000000000259a	addq	-0x10(%rbp), %rax
000000000000259e	movq	%rax, -0x10(%rbp)
00000000000025a2	movl	$0x0, -0x14(%rbp)
00000000000025a9	movq	-0x8(%rbp), %rax
00000000000025ad	movq	0x8(%rax), %rax
00000000000025b1	movq	%rax, -0x8(%rbp)
00000000000025b5	jmp	0x2560
00000000000025ba	movq	-0x10(%rbp), %rax
00000000000025be	addq	$0x20, %rsp
00000000000025c2	popq	%rbp
00000000000025c3	retq
00000000000025c4	nopw	%cs:(%rax,%rax)
_print_small:
00000000000025d0	pushq	%rbp
00000000000025d1	movq	%rsp, %rbp
00000000000025d4	subq	$0x20, %rsp
00000000000025d8	callq	0x11f0
00000000000025dd	movq	%rax, -0x8(%rbp)
00000000000025e1	movq	$0x0, -0x10(%rbp)
00000000000025e9	movl	$0x1, -0x14(%rbp)
00000000000025f0	cmpq	$0x0, -0x8(%rbp)
00000000000025f5	je	0x264a
00000000000025fb	movq	-0x8(%rbp), %rax
00000000000025ff	cmpl	$0x0, 0x1c(%rax)
0000000000002603	jne	0x2639
0000000000002609	movq	-0x8(%rbp), %rax
000000000000260d	cmpl	$0x1, 0x18(%rax)
0000000000002611	jne	0x2639
0000000000002617	leaq	0x924(%rip), %rdi
000000000000261e	movq	-0x8(%rbp), %rsi
0000000000002622	movl	-0x14(%rbp), %edx
0000000000002625	callq	0x2480
000000000000262a	addq	-0x10(%rbp), %rax
000000000000262e	movq	%rax, -0x10(%rbp)
0000000000002632	movl	$0x0, -0x14(%rbp)
0000000000002639	movq	-0x8(%rbp), %rax
000000000000263d	movq	0x8(%rax), %rax
0000000000002641	movq	%rax, -0x8(%rbp)
0000000000002645	jmp	0x25f0
000000000000264a	movq	-0x10(%rbp), %rax
000000000000264e	addq	$0x20, %rsp
0000000000002652	popq	%rbp
0000000000002653	retq
0000000000002654	nopw	%cs:(%rax,%rax)
_print_large:
0000000000002660	pushq	%rbp
0000000000002661	movq	%rsp, %rbp
0000000000002664	subq	$0x20, %rsp
0000000000002668	callq	0x11f0
000000000000266d	movq	%rax, -0x8(%rbp)
0000000000002671	movq	$0x0, -0x10(%rbp)
0000000000002679	movl	$0x1, -0x14(%rbp)
0000000000002680	cmpq	$0x0, -0x8(%rbp)
0000000000002685	je	0x26da
000000000000268b	movq	-0x8(%rbp), %rax
000000000000268f	cmpl	$0x0, 0x1c(%rax)
0000000000002693	jne	0x26c9
0000000000002699	movq	-0x8(%rbp), %rax
000000000000269d	cmpl	$0x2, 0x18(%rax)
00000000000026a1	jne	0x26c9
00000000000026a7	leaq	0x89a(%rip), %rdi
00000000000026ae	movq	-0x8(%rbp), %rsi
00000000000026b2	movl	-0x14(%rbp), %edx
00000000000026b5	callq	0x2480
00000000000026ba	addq	-0x10(%rbp), %rax
00000000000026be	movq	%rax, -0x10(%rbp)
00000000000026c2	movl	$0x0, -0x14(%rbp)
00000000000026c9	movq	-0x8(%rbp), %rax
00000000000026cd	movq	0x8(%rax), %rax
00000000000026d1	movq	%rax, -0x8(%rbp)
00000000000026d5	jmp	0x2680
00000000000026da	movq	-0x10(%rbp), %rax
00000000000026de	addq	$0x20, %rsp
00000000000026e2	popq	%rbp
00000000000026e3	retq
00000000000026e4	nop
00000000000026e5	nop
00000000000026e6	nop
00000000000026e7	nop
00000000000026e8	nop
00000000000026e9	nop
00000000000026ea	nop
00000000000026eb	nop
00000000000026ec	nop
00000000000026ed	nop
00000000000026ee	nop
00000000000026ef	nop
_ft_itoabase:
00000000000026f0	pushq	%rbp
00000000000026f1	movq	%rsp, %rbp
00000000000026f4	subq	$0x50, %rsp
00000000000026f8	movq	%rdi, -0x8(%rbp)
00000000000026fc	movq	%rsi, -0x10(%rbp)
0000000000002700	movq	-0x8(%rbp), %rsi
0000000000002704	movq	%rsi, -0x30(%rbp)
0000000000002708	movq	$0x1, -0x28(%rbp)
0000000000002710	movl	$0x0, -0x1c(%rbp)
0000000000002717	movq	-0x30(%rbp), %rax
000000000000271b	movq	-0x10(%rbp), %rdi
000000000000271f	movq	%rax, -0x38(%rbp)
0000000000002723	callq	0x2970
0000000000002728	movslq	%eax, %rdi
000000000000272b	movq	-0x38(%rbp), %rax
000000000000272f	cqto
0000000000002731	idivq	%rdi
0000000000002734	movq	%rax, -0x30(%rbp)
0000000000002738	cmpq	$0x0, %rax
000000000000273c	je	0x2770
0000000000002742	movq	-0x28(%rbp), %rax
0000000000002746	movq	-0x10(%rbp), %rdi
000000000000274a	movq	%rax, -0x40(%rbp)
000000000000274e	callq	0x2970
0000000000002753	movslq	%eax, %rdi
0000000000002756	movq	-0x40(%rbp), %rcx
000000000000275a	imulq	%rdi, %rcx
000000000000275e	movq	%rcx, -0x28(%rbp)
0000000000002762	movl	-0x1c(%rbp), %eax
0000000000002765	addl	$0x1, %eax
0000000000002768	movl	%eax, -0x1c(%rbp)
000000000000276b	jmp	0x2717
0000000000002770	movq	-0x8(%rbp), %rax
0000000000002774	movq	%rax, -0x30(%rbp)
0000000000002778	movl	-0x1c(%rbp), %ecx
000000000000277b	addl	$0x1, %ecx
000000000000277e	movslq	%ecx, %rax
0000000000002781	shlq	$0x0, %rax
0000000000002785	movq	%rax, %rdi
0000000000002788	callq	0x2830
000000000000278d	movq	%rax, -0x18(%rbp)
0000000000002791	movl	$0x0, -0x1c(%rbp)
0000000000002798	cmpq	$0x0, -0x28(%rbp)
000000000000279d	je	0x2818
00000000000027a3	movq	-0x30(%rbp), %rax
00000000000027a7	cqto
00000000000027a9	idivq	-0x28(%rbp)
00000000000027ad	movq	-0x10(%rbp), %rcx
00000000000027b1	movb	(%rcx,%rax), %sil
00000000000027b5	movslq	-0x1c(%rbp), %rax
00000000000027b9	movq	-0x18(%rbp), %rcx
00000000000027bd	movb	%sil, (%rcx,%rax)
00000000000027c1	movq	-0x30(%rbp), %rax
00000000000027c5	movq	-0x30(%rbp), %rcx
00000000000027c9	movq	%rax, -0x48(%rbp)
00000000000027cd	movq	%rcx, %rax
00000000000027d0	cqto
00000000000027d2	idivq	-0x28(%rbp)
00000000000027d6	imulq	-0x28(%rbp), %rax
00000000000027db	movq	-0x48(%rbp), %rcx
00000000000027df	subq	%rax, %rcx
00000000000027e2	movq	%rcx, -0x30(%rbp)
00000000000027e6	movq	-0x28(%rbp), %rax
00000000000027ea	movq	-0x10(%rbp), %rdi
00000000000027ee	movq	%rax, -0x50(%rbp)
00000000000027f2	callq	0x2970
00000000000027f7	movslq	%eax, %rcx
00000000000027fa	movq	-0x50(%rbp), %rax
00000000000027fe	cqto
0000000000002800	idivq	%rcx
0000000000002803	movq	%rax, -0x28(%rbp)
0000000000002807	movl	-0x1c(%rbp), %r8d
000000000000280b	addl	$0x1, %r8d
000000000000280f	movl	%r8d, -0x1c(%rbp)
0000000000002813	jmp	0x2798
0000000000002818	movslq	-0x1c(%rbp), %rax
000000000000281c	movq	-0x18(%rbp), %rcx
0000000000002820	movb	$0x0, (%rcx,%rax)
0000000000002824	movq	-0x18(%rbp), %rax
0000000000002828	addq	$0x50, %rsp
000000000000282c	popq	%rbp
000000000000282d	retq
000000000000282e	nop
_itoa_malloc:
0000000000002830	pushq	%rbp
0000000000002831	movq	%rsp, %rbp
0000000000002834	subq	$0x20, %rsp
0000000000002838	movq	%rdi, -0x10(%rbp)
000000000000283c	cmpq	$0x1, -0x10(%rbp)
0000000000002841	jae	0x2854
0000000000002847	movq	$0x0, -0x8(%rbp)
000000000000284f	jmp	0x288e
0000000000002854	movq	-0x10(%rbp), %rdi
0000000000002858	callq	0x10b0
000000000000285d	movq	%rax, -0x18(%rbp)
0000000000002861	cmpq	$0x0, %rax
0000000000002865	jne	0x2878
000000000000286b	movq	$0x0, -0x8(%rbp)
0000000000002873	jmp	0x288e
0000000000002878	movq	-0x18(%rbp), %rax
000000000000287c	movw	$0x0, 0x18(%rax)
0000000000002882	movq	-0x18(%rbp), %rax
0000000000002886	movq	0x10(%rax), %rax
000000000000288a	movq	%rax, -0x8(%rbp)
000000000000288e	movq	-0x8(%rbp), %rax
0000000000002892	addq	$0x20, %rsp
0000000000002896	popq	%rbp
0000000000002897	retq
0000000000002898	nop
0000000000002899	nop
000000000000289a	nop
000000000000289b	nop
000000000000289c	nop
000000000000289d	nop
000000000000289e	nop
000000000000289f	nop
_ft_putchar:
00000000000028a0	pushq	%rbp
00000000000028a1	movq	%rsp, %rbp
00000000000028a4	subq	$0x10, %rsp
00000000000028a8	movb	%dil, %al
00000000000028ab	movl	$0x1, %edi
00000000000028b0	leaq	-0x1(%rbp), %rsi
00000000000028b4	movl	$0x1, %ecx
00000000000028b9	movl	%ecx, %edx
00000000000028bb	movb	%al, -0x1(%rbp)
00000000000028be	callq	0x2dfa
00000000000028c3	movq	%rax, -0x10(%rbp)
00000000000028c7	addq	$0x10, %rsp
00000000000028cb	popq	%rbp
00000000000028cc	retq
00000000000028cd	nop
00000000000028ce	nop
00000000000028cf	nop
_ft_putnbr:
00000000000028d0	pushq	%rbp
00000000000028d1	movq	%rsp, %rbp
00000000000028d4	subq	$0x10, %rsp
00000000000028d8	movq	%rdi, -0x8(%rbp)
00000000000028dc	cmpq	$0x0, -0x8(%rbp)
00000000000028e1	jge	0x28fd
00000000000028e7	movl	$0x2d, %edi
00000000000028ec	callq	0x28a0
00000000000028f1	xorl	%edi, %edi
00000000000028f3	movl	%edi, %eax
00000000000028f5	subq	-0x8(%rbp), %rax
00000000000028f9	movq	%rax, -0x8(%rbp)
00000000000028fd	cmpq	$0xa, -0x8(%rbp)
0000000000002902	jl	0x2950
0000000000002908	movl	$0xa, %eax
000000000000290d	movl	%eax, %ecx
000000000000290f	movq	-0x8(%rbp), %rax
0000000000002913	cqto
0000000000002915	idivq	%rcx
0000000000002918	movq	%rax, %rdi
000000000000291b	callq	0x28d0
0000000000002920	movl	$0xa, %esi
0000000000002925	movl	%esi, %eax
0000000000002927	movq	-0x8(%rbp), %rcx
000000000000292b	movq	%rax, -0x10(%rbp)
000000000000292f	movq	%rcx, %rax
0000000000002932	cqto
0000000000002934	movq	-0x10(%rbp), %rcx
0000000000002938	idivq	%rcx
000000000000293b	addq	$0x30, %rdx
000000000000293f	movb	%dl, %r8b
0000000000002942	movsbl	%r8b, %edi
0000000000002946	callq	0x28a0
000000000000294b	jmp	0x2962
0000000000002950	movq	-0x8(%rbp), %rax
0000000000002954	addq	$0x30, %rax
0000000000002958	movb	%al, %cl
000000000000295a	movsbl	%cl, %edi
000000000000295d	callq	0x28a0
0000000000002962	addq	$0x10, %rsp
0000000000002966	popq	%rbp
0000000000002967	retq
0000000000002968	nop
0000000000002969	nop
000000000000296a	nop
000000000000296b	nop
000000000000296c	nop
000000000000296d	nop
000000000000296e	nop
000000000000296f	nop
_ft_strlen:
0000000000002970	pushq	%rbp
0000000000002971	movq	%rsp, %rbp
0000000000002974	movq	%rdi, -0x8(%rbp)
0000000000002978	movl	$0x0, -0xc(%rbp)
000000000000297f	movslq	-0xc(%rbp), %rax
0000000000002983	movq	-0x8(%rbp), %rcx
0000000000002987	cmpb	$0x0, (%rcx,%rax)
000000000000298b	je	0x299f
0000000000002991	movl	-0xc(%rbp), %eax
0000000000002994	addl	$0x1, %eax
0000000000002997	movl	%eax, -0xc(%rbp)
000000000000299a	jmp	0x297f
000000000000299f	movl	-0xc(%rbp), %eax
00000000000029a2	popq	%rbp
00000000000029a3	retq
00000000000029a4	nop
00000000000029a5	nop
00000000000029a6	nop
00000000000029a7	nop
00000000000029a8	nop
00000000000029a9	nop
00000000000029aa	nop
00000000000029ab	nop
00000000000029ac	nop
00000000000029ad	nop
00000000000029ae	nop
00000000000029af	nop
_ft_putstr:
00000000000029b0	pushq	%rbp
00000000000029b1	movq	%rsp, %rbp
00000000000029b4	subq	$0x20, %rsp
00000000000029b8	movq	%rdi, -0x8(%rbp)
00000000000029bc	movl	$0x0, -0xc(%rbp)
00000000000029c3	movslq	-0xc(%rbp), %rax
00000000000029c7	movq	-0x8(%rbp), %rcx
00000000000029cb	cmpb	$0x0, (%rcx,%rax)
00000000000029cf	je	0x29e3
00000000000029d5	movl	-0xc(%rbp), %eax
00000000000029d8	addl	$0x1, %eax
00000000000029db	movl	%eax, -0xc(%rbp)
00000000000029de	jmp	0x29c3
00000000000029e3	movl	$0x1, %edi
00000000000029e8	movq	-0x8(%rbp), %rsi
00000000000029ec	movslq	-0xc(%rbp), %rdx
00000000000029f0	callq	0x2dfa
00000000000029f5	movq	%rax, -0x18(%rbp)
00000000000029f9	addq	$0x20, %rsp
00000000000029fd	popq	%rbp
00000000000029fe	retq
00000000000029ff	nop
_print_hexa_shield:
0000000000002a00	pushq	%rbp
0000000000002a01	movq	%rsp, %rbp
0000000000002a04	subq	$0x20, %rsp
0000000000002a08	movq	%rdi, -0x8(%rbp)
0000000000002a0c	movq	-0x8(%rbp), %rdi
0000000000002a10	movq	0x10(%rdi), %rdi
0000000000002a14	movq	%rdi, -0x10(%rbp)
0000000000002a18	movq	$0x0, -0x18(%rbp)
0000000000002a20	movq	$0x0, -0x20(%rbp)
0000000000002a28	movq	-0x18(%rbp), %rax
0000000000002a2c	movq	-0x8(%rbp), %rcx
0000000000002a30	cmpq	0x8(%rcx), %rax
0000000000002a34	jae	0x2ad2
0000000000002a3a	movq	-0x8(%rbp), %rax
0000000000002a3e	movswl	0x18(%rax), %ecx
0000000000002a42	cmpl	$0x0, %ecx
0000000000002a45	jne	0x2ab5
0000000000002a4b	movq	-0x10(%rbp), %rax
0000000000002a4f	movsbl	(%rax), %ecx
0000000000002a52	sarl	$0x4, %ecx
0000000000002a55	movl	%ecx, %edi
0000000000002a57	callq	0x2cb0
0000000000002a5c	movq	-0x10(%rbp), %rax
0000000000002a60	movsbl	(%rax), %ecx
0000000000002a63	movq	-0x10(%rbp), %rax
0000000000002a67	movsbl	(%rax), %edi
0000000000002a6a	sarl	$0x4, %edi
0000000000002a6d	shll	$0x4, %edi
0000000000002a70	subl	%edi, %ecx
0000000000002a72	movl	%ecx, %edi
0000000000002a74	callq	0x2cb0
0000000000002a79	leaq	0x4ce(%rip), %rdi
0000000000002a80	callq	0x29b0
0000000000002a85	movq	-0x20(%rbp), %rax
0000000000002a89	addq	$0x1, %rax
0000000000002a8d	movq	%rax, -0x20(%rbp)
0000000000002a91	cmpq	$0x10, -0x20(%rbp)
0000000000002a96	jb	0x2ab0
0000000000002a9c	movq	-0x20(%rbp), %rdi
0000000000002aa0	movq	-0x10(%rbp), %rsi
0000000000002aa4	callq	0x2d10
0000000000002aa9	movslq	%eax, %rsi
0000000000002aac	movq	%rsi, -0x20(%rbp)
0000000000002ab0	jmp	0x2ab5
0000000000002ab5	movq	-0x10(%rbp), %rax
0000000000002ab9	addq	$0x1, %rax
0000000000002abd	movq	%rax, -0x10(%rbp)
0000000000002ac1	movq	-0x18(%rbp), %rax
0000000000002ac5	addq	$0x1, %rax
0000000000002ac9	movq	%rax, -0x18(%rbp)
0000000000002acd	jmp	0x2a28
0000000000002ad2	movq	-0x20(%rbp), %rdi
0000000000002ad6	movq	-0x10(%rbp), %rsi
0000000000002ada	callq	0x2d10
0000000000002adf	addq	$0x20, %rsp
0000000000002ae3	popq	%rbp
0000000000002ae4	retq
0000000000002ae5	nopw	%cs:(%rax,%rax)
_print_preshexa_shield:
0000000000002af0	pushq	%rbp
0000000000002af1	movq	%rsp, %rbp
0000000000002af4	subq	$0x10, %rsp
0000000000002af8	movq	%rdi, -0x8(%rbp)
0000000000002afc	movq	-0x8(%rbp), %rdi
0000000000002b00	callq	0x23f0
0000000000002b05	leaq	0x444(%rip), %rdi
0000000000002b0c	callq	0x29b0
0000000000002b11	leaq	0x468(%rip), %rdi
0000000000002b18	callq	0x29b0
0000000000002b1d	movq	-0x8(%rbp), %rdi
0000000000002b21	callq	0x2a00
0000000000002b26	movslq	%eax, %rdi
0000000000002b29	movq	%rdi, -0x10(%rbp)
0000000000002b2d	cmpq	$0x0, -0x10(%rbp)
0000000000002b32	jbe	0x2b44
0000000000002b38	leaq	0x3fc(%rip), %rdi
0000000000002b3f	callq	0x29b0
0000000000002b44	addq	$0x10, %rsp
0000000000002b48	popq	%rbp
0000000000002b49	retq
0000000000002b4a	nopw	(%rax,%rax)
_print_hexa_map:
0000000000002b50	pushq	%rbp
0000000000002b51	movq	%rsp, %rbp
0000000000002b54	subq	$0x10, %rsp
0000000000002b58	movq	%rdi, -0x8(%rbp)
0000000000002b5c	movq	-0x8(%rbp), %rdi
0000000000002b60	movq	(%rdi), %rdi
0000000000002b63	movq	%rdi, -0x10(%rbp)
0000000000002b67	cmpq	$0x0, -0x10(%rbp)
0000000000002b6c	je	0x2baa
0000000000002b72	movq	-0x10(%rbp), %rax
0000000000002b76	movswl	0x18(%rax), %ecx
0000000000002b7a	cmpl	$0x0, %ecx
0000000000002b7d	jne	0x2b8c
0000000000002b83	movq	-0x10(%rbp), %rdi
0000000000002b87	callq	0x2af0
0000000000002b8c	movq	-0x8(%rbp), %rdi
0000000000002b90	movq	-0x10(%rbp), %rax
0000000000002b94	movswl	(%rax), %ecx
0000000000002b97	addl	$0x1, %ecx
0000000000002b9a	movl	%ecx, %esi
0000000000002b9c	callq	0x1a90
0000000000002ba1	movq	%rax, -0x10(%rbp)
0000000000002ba5	jmp	0x2b67
0000000000002baa	addq	$0x10, %rsp
0000000000002bae	popq	%rbp
0000000000002baf	retq
_print_hexa_zone:
0000000000002bb0	pushq	%rbp
0000000000002bb1	movq	%rsp, %rbp
0000000000002bb4	subq	$0x10, %rsp
0000000000002bb8	movl	%edi, -0x4(%rbp)
0000000000002bbb	callq	0x11f0
0000000000002bc0	movq	%rax, -0x10(%rbp)
0000000000002bc4	cmpq	$0x0, -0x10(%rbp)
0000000000002bc9	je	0x2c07
0000000000002bcf	movq	-0x10(%rbp), %rax
0000000000002bd3	cmpl	$0x0, 0x1c(%rax)
0000000000002bd7	jne	0x2bf6
0000000000002bdd	movq	-0x10(%rbp), %rax
0000000000002be1	movl	0x18(%rax), %ecx
0000000000002be4	cmpl	-0x4(%rbp), %ecx
0000000000002be7	jne	0x2bf6
0000000000002bed	movq	-0x10(%rbp), %rdi
0000000000002bf1	callq	0x2b50
0000000000002bf6	movq	-0x10(%rbp), %rax
0000000000002bfa	movq	0x8(%rax), %rax
0000000000002bfe	movq	%rax, -0x10(%rbp)
0000000000002c02	jmp	0x2bc4
0000000000002c07	addq	$0x10, %rsp
0000000000002c0b	popq	%rbp
0000000000002c0c	retq
0000000000002c0d	nop
0000000000002c0e	nop
0000000000002c0f	nop
_print_ascii_sixten_shield:
0000000000002c10	pushq	%rbp
0000000000002c11	movq	%rsp, %rbp
0000000000002c14	subq	$0x20, %rsp
0000000000002c18	movl	%edi, -0x4(%rbp)
0000000000002c1b	movq	%rsi, -0x10(%rbp)
0000000000002c1f	movl	$0x0, -0x14(%rbp)
0000000000002c26	xorl	%eax, %eax
0000000000002c28	movb	%al, %cl
0000000000002c2a	movl	-0x14(%rbp), %eax
0000000000002c2d	cmpl	-0x4(%rbp), %eax
0000000000002c30	movb	%cl, -0x15(%rbp)
0000000000002c33	jge	0x2c43
0000000000002c39	cmpl	$0x10, -0x14(%rbp)
0000000000002c3d	setl	%al
0000000000002c40	movb	%al, -0x15(%rbp)
0000000000002c43	movb	-0x15(%rbp), %al
0000000000002c46	testb	$0x1, %al
0000000000002c48	jne	0x2c53
0000000000002c4e	jmp	0x2ca8
0000000000002c53	movq	-0x10(%rbp), %rax
0000000000002c57	movsbl	(%rax), %ecx
0000000000002c5a	cmpl	$0x21, %ecx
0000000000002c5d	jle	0x2c84
0000000000002c63	movq	-0x10(%rbp), %rax
0000000000002c67	movsbl	(%rax), %ecx
0000000000002c6a	cmpl	$0x7f, %ecx
0000000000002c6d	jge	0x2c84
0000000000002c73	movq	-0x10(%rbp), %rax
0000000000002c77	movsbl	(%rax), %edi
0000000000002c7a	callq	0x28a0
0000000000002c7f	jmp	0x2c8e
0000000000002c84	movl	$0x2e, %edi
0000000000002c89	callq	0x28a0
0000000000002c8e	movq	-0x10(%rbp), %rax
0000000000002c92	addq	$0x1, %rax
0000000000002c96	movq	%rax, -0x10(%rbp)
0000000000002c9a	movl	-0x14(%rbp), %ecx
0000000000002c9d	addl	$0x1, %ecx
0000000000002ca0	movl	%ecx, -0x14(%rbp)
0000000000002ca3	jmp	0x2c26
0000000000002ca8	addq	$0x20, %rsp
0000000000002cac	popq	%rbp
0000000000002cad	retq
0000000000002cae	nop
_print_itoa_val:
0000000000002cb0	pushq	%rbp
0000000000002cb1	movq	%rsp, %rbp
0000000000002cb4	subq	$0x10, %rsp
0000000000002cb8	leaq	0x2d7(%rip), %rsi
0000000000002cbf	movl	%edi, -0x4(%rbp)
0000000000002cc2	movslq	-0x4(%rbp), %rdi
0000000000002cc6	callq	0x26f0
0000000000002ccb	movq	%rax, -0x10(%rbp)
0000000000002ccf	cmpq	$0x0, -0x10(%rbp)
0000000000002cd4	je	0x2cf1
0000000000002cda	movq	-0x10(%rbp), %rdi
0000000000002cde	callq	0x29b0
0000000000002ce3	movq	-0x10(%rbp), %rdi
0000000000002ce7	callq	0xcc0
0000000000002cec	jmp	0x2cfd
0000000000002cf1	leaq	0x238(%rip), %rdi
0000000000002cf8	callq	0x29b0
0000000000002cfd	addq	$0x10, %rsp
0000000000002d01	popq	%rbp
0000000000002d02	retq
0000000000002d03	nopw	%cs:(%rax,%rax)
_print_ended_hexa_line:
0000000000002d10	pushq	%rbp
0000000000002d11	movq	%rsp, %rbp
0000000000002d14	subq	$0x20, %rsp
0000000000002d18	movq	%rdi, -0x10(%rbp)
0000000000002d1c	movq	%rsi, -0x18(%rbp)
0000000000002d20	movl	$0x0, -0x1c(%rbp)
0000000000002d27	cmpq	$0x0, -0x10(%rbp)
0000000000002d2c	ja	0x2d3e
0000000000002d32	movl	$0x0, -0x4(%rbp)
0000000000002d39	jmp	0x2dcd
0000000000002d3e	jmp	0x2d43
0000000000002d43	movslq	-0x1c(%rbp), %rax
0000000000002d47	addq	-0x10(%rbp), %rax
0000000000002d4b	cmpq	$0x10, %rax
0000000000002d4f	jae	0x2d6f
0000000000002d55	leaq	0x24b(%rip), %rdi
0000000000002d5c	callq	0x29b0
0000000000002d61	movl	-0x1c(%rbp), %eax
0000000000002d64	addl	$0x1, %eax
0000000000002d67	movl	%eax, -0x1c(%rbp)
0000000000002d6a	jmp	0x2d43
0000000000002d6f	leaq	0x235(%rip), %rdi
0000000000002d76	callq	0x29b0
0000000000002d7b	xorl	%eax, %eax
0000000000002d7d	movl	%eax, %edi
0000000000002d7f	movq	-0x10(%rbp), %rcx
0000000000002d83	movl	%ecx, %eax
0000000000002d85	movq	-0x18(%rbp), %rcx
0000000000002d89	movq	-0x10(%rbp), %rdx
0000000000002d8d	subq	$0x1, %rdx
0000000000002d91	subq	%rdx, %rdi
0000000000002d94	addq	%rdi, %rcx
0000000000002d97	movl	%eax, %edi
0000000000002d99	movq	%rcx, %rsi
0000000000002d9c	callq	0x2c10
0000000000002da1	cmpq	$0x10, -0x10(%rbp)
0000000000002da6	jb	0x2dc4
0000000000002dac	leaq	0x188(%rip), %rdi
0000000000002db3	callq	0x29b0
0000000000002db8	movl	$0x0, -0x4(%rbp)
0000000000002dbf	jmp	0x2dcd
0000000000002dc4	movq	-0x10(%rbp), %rax
0000000000002dc8	movl	%eax, %ecx
0000000000002dca	movl	%ecx, -0x4(%rbp)
0000000000002dcd	movl	-0x4(%rbp), %eax
0000000000002dd0	addq	$0x20, %rsp
0000000000002dd4	popq	%rbp
0000000000002dd5	retq
